"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@giscus+react@2.4.0_react-dom@18.2.0_react@18.2.0";
exports.ids = ["vendor-chunks/@giscus+react@2.4.0_react-dom@18.2.0_react@18.2.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@giscus+react@2.4.0_react-dom@18.2.0_react@18.2.0/node_modules/@giscus/react/dist/giscus-yDPVZW4a.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@giscus+react@2.4.0_react-dom@18.2.0_react@18.2.0/node_modules/@giscus/react/dist/giscus-yDPVZW4a.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, Symbol.toStringTag, {\n    value: \"Module\"\n}); /**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ \nconst x = globalThis, V = x.ShadowRoot && (x.ShadyCSS === void 0 || x.ShadyCSS.nativeShadow) && \"adoptedStyleSheets\" in Document.prototype && \"replace\" in CSSStyleSheet.prototype, q = Symbol(), Y = new WeakMap;\nlet nt = class {\n    constructor(t, e, s){\n        if (this._$cssResult$ = !0, s !== q) throw Error(\"CSSResult is not constructable. Use `unsafeCSS` or `css` instead.\");\n        this.cssText = t, this.t = e;\n    }\n    get styleSheet() {\n        let t = this.o;\n        const e = this.t;\n        if (V && t === void 0) {\n            const s = e !== void 0 && e.length === 1;\n            s && (t = Y.get(e)), t === void 0 && ((this.o = t = new CSSStyleSheet).replaceSync(this.cssText), s && Y.set(e, t));\n        }\n        return t;\n    }\n    toString() {\n        return this.cssText;\n    }\n};\nconst ut = (r)=>new nt(typeof r == \"string\" ? r : r + \"\", void 0, q), pt = (r, ...t)=>{\n    const e = r.length === 1 ? r[0] : t.reduce((s, i, n)=>s + ((o)=>{\n            if (o._$cssResult$ === !0) return o.cssText;\n            if (typeof o == \"number\") return o;\n            throw Error(\"Value passed to 'css' function must be a 'css' function result: \" + o + \". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.\");\n        })(i) + r[n + 1], r[0]);\n    return new nt(e, r, q);\n}, $t = (r, t)=>{\n    if (V) r.adoptedStyleSheets = t.map((e)=>e instanceof CSSStyleSheet ? e : e.styleSheet);\n    else for (const e of t){\n        const s = document.createElement(\"style\"), i = x.litNonce;\n        i !== void 0 && s.setAttribute(\"nonce\", i), s.textContent = e.cssText, r.appendChild(s);\n    }\n}, J = V ? (r)=>r : (r)=>r instanceof CSSStyleSheet ? ((t)=>{\n        let e = \"\";\n        for (const s of t.cssRules)e += s.cssText;\n        return ut(e);\n    })(r) : r; /**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ \nconst { is: gt, defineProperty: _t, getOwnPropertyDescriptor: ft, getOwnPropertyNames: mt, getOwnPropertySymbols: At, getPrototypeOf: yt } = Object, m = globalThis, F = m.trustedTypes, St = F ? F.emptyScript : \"\", W = m.reactiveElementPolyfillSupport, w = (r, t)=>r, H = {\n    toAttribute (r, t) {\n        switch(t){\n            case Boolean:\n                r = r ? St : null;\n                break;\n            case Object:\n            case Array:\n                r = r == null ? r : JSON.stringify(r);\n        }\n        return r;\n    },\n    fromAttribute (r, t) {\n        let e = r;\n        switch(t){\n            case Boolean:\n                e = r !== null;\n                break;\n            case Number:\n                e = r === null ? null : Number(r);\n                break;\n            case Object:\n            case Array:\n                try {\n                    e = JSON.parse(r);\n                } catch  {\n                    e = null;\n                }\n        }\n        return e;\n    }\n}, K = (r, t)=>!gt(r, t), Q = {\n    attribute: !0,\n    type: String,\n    converter: H,\n    reflect: !1,\n    hasChanged: K\n};\nSymbol.metadata ?? (Symbol.metadata = Symbol(\"metadata\")), m.litPropertyMetadata ?? (m.litPropertyMetadata = new WeakMap);\nclass v extends HTMLElement {\n    static addInitializer(t) {\n        this._$Ei(), (this.l ?? (this.l = [])).push(t);\n    }\n    static get observedAttributes() {\n        return this.finalize(), this._$Eh && [\n            ...this._$Eh.keys()\n        ];\n    }\n    static createProperty(t, e = Q) {\n        if (e.state && (e.attribute = !1), this._$Ei(), this.elementProperties.set(t, e), !e.noAccessor) {\n            const s = Symbol(), i = this.getPropertyDescriptor(t, s, e);\n            i !== void 0 && _t(this.prototype, t, i);\n        }\n    }\n    static getPropertyDescriptor(t, e, s) {\n        const { get: i, set: n } = ft(this.prototype, t) ?? {\n            get () {\n                return this[e];\n            },\n            set (o) {\n                this[e] = o;\n            }\n        };\n        return {\n            get () {\n                return i == null ? void 0 : i.call(this);\n            },\n            set (o) {\n                const a = i == null ? void 0 : i.call(this);\n                n.call(this, o), this.requestUpdate(t, a, s);\n            },\n            configurable: !0,\n            enumerable: !0\n        };\n    }\n    static getPropertyOptions(t) {\n        return this.elementProperties.get(t) ?? Q;\n    }\n    static _$Ei() {\n        if (this.hasOwnProperty(w(\"elementProperties\"))) return;\n        const t = yt(this);\n        t.finalize(), t.l !== void 0 && (this.l = [\n            ...t.l\n        ]), this.elementProperties = new Map(t.elementProperties);\n    }\n    static finalize() {\n        if (this.hasOwnProperty(w(\"finalized\"))) return;\n        if (this.finalized = !0, this._$Ei(), this.hasOwnProperty(w(\"properties\"))) {\n            const e = this.properties, s = [\n                ...mt(e),\n                ...At(e)\n            ];\n            for (const i of s)this.createProperty(i, e[i]);\n        }\n        const t = this[Symbol.metadata];\n        if (t !== null) {\n            const e = litPropertyMetadata.get(t);\n            if (e !== void 0) for (const [s, i] of e)this.elementProperties.set(s, i);\n        }\n        this._$Eh = new Map;\n        for (const [e, s] of this.elementProperties){\n            const i = this._$Eu(e, s);\n            i !== void 0 && this._$Eh.set(i, e);\n        }\n        this.elementStyles = this.finalizeStyles(this.styles);\n    }\n    static finalizeStyles(t) {\n        const e = [];\n        if (Array.isArray(t)) {\n            const s = new Set(t.flat(1 / 0).reverse());\n            for (const i of s)e.unshift(J(i));\n        } else t !== void 0 && e.push(J(t));\n        return e;\n    }\n    static _$Eu(t, e) {\n        const s = e.attribute;\n        return s === !1 ? void 0 : typeof s == \"string\" ? s : typeof t == \"string\" ? t.toLowerCase() : void 0;\n    }\n    constructor(){\n        super(), this._$Ep = void 0, this.isUpdatePending = !1, this.hasUpdated = !1, this._$Em = null, this._$Ev();\n    }\n    _$Ev() {\n        var t;\n        this._$Eg = new Promise((e)=>this.enableUpdating = e), this._$AL = new Map, this._$ES(), this.requestUpdate(), (t = this.constructor.l) == null || t.forEach((e)=>e(this));\n    }\n    addController(t) {\n        var e;\n        (this._$E_ ?? (this._$E_ = new Set)).add(t), this.renderRoot !== void 0 && this.isConnected && ((e = t.hostConnected) == null || e.call(t));\n    }\n    removeController(t) {\n        var e;\n        (e = this._$E_) == null || e.delete(t);\n    }\n    _$ES() {\n        const t = new Map, e = this.constructor.elementProperties;\n        for (const s of e.keys())this.hasOwnProperty(s) && (t.set(s, this[s]), delete this[s]);\n        t.size > 0 && (this._$Ep = t);\n    }\n    createRenderRoot() {\n        const t = this.shadowRoot ?? this.attachShadow(this.constructor.shadowRootOptions);\n        return $t(t, this.constructor.elementStyles), t;\n    }\n    connectedCallback() {\n        var t;\n        this.renderRoot ?? (this.renderRoot = this.createRenderRoot()), this.enableUpdating(!0), (t = this._$E_) == null || t.forEach((e)=>{\n            var s;\n            return (s = e.hostConnected) == null ? void 0 : s.call(e);\n        });\n    }\n    enableUpdating(t) {}\n    disconnectedCallback() {\n        var t;\n        (t = this._$E_) == null || t.forEach((e)=>{\n            var s;\n            return (s = e.hostDisconnected) == null ? void 0 : s.call(e);\n        });\n    }\n    attributeChangedCallback(t, e, s) {\n        this._$AK(t, s);\n    }\n    _$EO(t, e) {\n        var n;\n        const s = this.constructor.elementProperties.get(t), i = this.constructor._$Eu(t, s);\n        if (i !== void 0 && s.reflect === !0) {\n            const o = (((n = s.converter) == null ? void 0 : n.toAttribute) !== void 0 ? s.converter : H).toAttribute(e, s.type);\n            this._$Em = t, o == null ? this.removeAttribute(i) : this.setAttribute(i, o), this._$Em = null;\n        }\n    }\n    _$AK(t, e) {\n        var n;\n        const s = this.constructor, i = s._$Eh.get(t);\n        if (i !== void 0 && this._$Em !== i) {\n            const o = s.getPropertyOptions(i), a = typeof o.converter == \"function\" ? {\n                fromAttribute: o.converter\n            } : ((n = o.converter) == null ? void 0 : n.fromAttribute) !== void 0 ? o.converter : H;\n            this._$Em = i, this[i] = a.fromAttribute(e, o.type), this._$Em = null;\n        }\n    }\n    requestUpdate(t, e, s, i = !1, n) {\n        if (t !== void 0) {\n            if (s ?? (s = this.constructor.getPropertyOptions(t)), !(s.hasChanged ?? K)(i ? n : this[t], e)) return;\n            this.C(t, e, s);\n        }\n        this.isUpdatePending === !1 && (this._$Eg = this._$EP());\n    }\n    C(t, e, s) {\n        this._$AL.has(t) || this._$AL.set(t, e), s.reflect === !0 && this._$Em !== t && (this._$Ej ?? (this._$Ej = new Set)).add(t);\n    }\n    async _$EP() {\n        this.isUpdatePending = !0;\n        try {\n            await this._$Eg;\n        } catch (e) {\n            Promise.reject(e);\n        }\n        const t = this.scheduleUpdate();\n        return t != null && await t, !this.isUpdatePending;\n    }\n    scheduleUpdate() {\n        return this.performUpdate();\n    }\n    performUpdate() {\n        var s;\n        if (!this.isUpdatePending) return;\n        if (!this.hasUpdated) {\n            if (this.renderRoot ?? (this.renderRoot = this.createRenderRoot()), this._$Ep) {\n                for (const [n, o] of this._$Ep)this[n] = o;\n                this._$Ep = void 0;\n            }\n            const i = this.constructor.elementProperties;\n            if (i.size > 0) for (const [n, o] of i)o.wrapped !== !0 || this._$AL.has(n) || this[n] === void 0 || this.C(n, this[n], o);\n        }\n        let t = !1;\n        const e = this._$AL;\n        try {\n            t = this.shouldUpdate(e), t ? (this.willUpdate(e), (s = this._$E_) == null || s.forEach((i)=>{\n                var n;\n                return (n = i.hostUpdate) == null ? void 0 : n.call(i);\n            }), this.update(e)) : this._$ET();\n        } catch (i) {\n            throw t = !1, this._$ET(), i;\n        }\n        t && this._$AE(e);\n    }\n    willUpdate(t) {}\n    _$AE(t) {\n        var e;\n        (e = this._$E_) == null || e.forEach((s)=>{\n            var i;\n            return (i = s.hostUpdated) == null ? void 0 : i.call(s);\n        }), this.hasUpdated || (this.hasUpdated = !0, this.firstUpdated(t)), this.updated(t);\n    }\n    _$ET() {\n        this._$AL = new Map, this.isUpdatePending = !1;\n    }\n    get updateComplete() {\n        return this.getUpdateComplete();\n    }\n    getUpdateComplete() {\n        return this._$Eg;\n    }\n    shouldUpdate(t) {\n        return !0;\n    }\n    update(t) {\n        this._$Ej && (this._$Ej = this._$Ej.forEach((e)=>this._$EO(e, this[e]))), this._$ET();\n    }\n    updated(t) {}\n    firstUpdated(t) {}\n}\nv.elementStyles = [], v.shadowRootOptions = {\n    mode: \"open\"\n}, v[w(\"elementProperties\")] = new Map, v[w(\"finalized\")] = new Map, W == null || W({\n    ReactiveElement: v\n}), (m.reactiveElementVersions ?? (m.reactiveElementVersions = [])).push(\"2.0.2\"); /**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ \nconst U = globalThis, G = U.trustedTypes, Z = G ? G.createPolicy(\"lit-html\", {\n    createHTML: (r)=>r\n}) : void 0, ot = \"$lit$\", f = `lit$${(Math.random() + \"\").slice(9)}$`, ht = \"?\" + f, vt = `<${ht}>`, S = document, O = ()=>S.createComment(\"\"), N = (r)=>r === null || typeof r != \"object\" && typeof r != \"function\", at = Array.isArray, Et = (r)=>at(r) || typeof (r == null ? void 0 : r[Symbol.iterator]) == \"function\", D = `[ \t\n\\f\\r]`, C = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g, X = /-->/g, tt = />/g, A = RegExp(`>|${D}(?:([^\\\\s\"'>=/]+)(${D}*=${D}*(?:[^ \t\n\\f\\r\"'\\`<>=]|(\"|')|))|$)`, \"g\"), et = /'/g, st = /\"/g, ct = /^(?:script|style|textarea|title)$/i, bt = (r)=>(t, ...e)=>({\n            _$litType$: r,\n            strings: t,\n            values: e\n        }), Ct = bt(1), E = Symbol.for(\"lit-noChange\"), l = Symbol.for(\"lit-nothing\"), it = new WeakMap, y = S.createTreeWalker(S, 129);\nfunction lt(r, t) {\n    if (!Array.isArray(r) || !r.hasOwnProperty(\"raw\")) throw Error(\"invalid template strings array\");\n    return Z !== void 0 ? Z.createHTML(t) : t;\n}\nconst wt = (r, t)=>{\n    const e = r.length - 1, s = [];\n    let i, n = t === 2 ? \"<svg>\" : \"\", o = C;\n    for(let a = 0; a < e; a++){\n        const h = r[a];\n        let d, u, c = -1, g = 0;\n        for(; g < h.length && (o.lastIndex = g, u = o.exec(h), u !== null);)g = o.lastIndex, o === C ? u[1] === \"!--\" ? o = X : u[1] !== void 0 ? o = tt : u[2] !== void 0 ? (ct.test(u[2]) && (i = RegExp(\"</\" + u[2], \"g\")), o = A) : u[3] !== void 0 && (o = A) : o === A ? u[0] === \">\" ? (o = i ?? C, c = -1) : u[1] === void 0 ? c = -2 : (c = o.lastIndex - u[2].length, d = u[1], o = u[3] === void 0 ? A : u[3] === '\"' ? st : et) : o === st || o === et ? o = A : o === X || o === tt ? o = C : (o = A, i = void 0);\n        const _ = o === A && r[a + 1].startsWith(\"/>\") ? \" \" : \"\";\n        n += o === C ? h + vt : c >= 0 ? (s.push(d), h.slice(0, c) + ot + h.slice(c) + f + _) : h + f + (c === -2 ? a : _);\n    }\n    return [\n        lt(r, n + (r[e] || \"<?>\") + (t === 2 ? \"</svg>\" : \"\")),\n        s\n    ];\n};\nclass R {\n    constructor({ strings: t, _$litType$: e }, s){\n        let i;\n        this.parts = [];\n        let n = 0, o = 0;\n        const a = t.length - 1, h = this.parts, [d, u] = wt(t, e);\n        if (this.el = R.createElement(d, s), y.currentNode = this.el.content, e === 2) {\n            const c = this.el.content.firstChild;\n            c.replaceWith(...c.childNodes);\n        }\n        for(; (i = y.nextNode()) !== null && h.length < a;){\n            if (i.nodeType === 1) {\n                if (i.hasAttributes()) for (const c of i.getAttributeNames())if (c.endsWith(ot)) {\n                    const g = u[o++], _ = i.getAttribute(c).split(f), I = /([.?@])?(.*)/.exec(g);\n                    h.push({\n                        type: 1,\n                        index: n,\n                        name: I[2],\n                        strings: _,\n                        ctor: I[1] === \".\" ? Pt : I[1] === \"?\" ? Tt : I[1] === \"@\" ? Ot : k\n                    }), i.removeAttribute(c);\n                } else c.startsWith(f) && (h.push({\n                    type: 6,\n                    index: n\n                }), i.removeAttribute(c));\n                if (ct.test(i.tagName)) {\n                    const c = i.textContent.split(f), g = c.length - 1;\n                    if (g > 0) {\n                        i.textContent = G ? G.emptyScript : \"\";\n                        for(let _ = 0; _ < g; _++)i.append(c[_], O()), y.nextNode(), h.push({\n                            type: 2,\n                            index: ++n\n                        });\n                        i.append(c[g], O());\n                    }\n                }\n            } else if (i.nodeType === 8) if (i.data === ht) h.push({\n                type: 2,\n                index: n\n            });\n            else {\n                let c = -1;\n                for(; (c = i.data.indexOf(f, c + 1)) !== -1;)h.push({\n                    type: 7,\n                    index: n\n                }), c += f.length - 1;\n            }\n            n++;\n        }\n    }\n    static createElement(t, e) {\n        const s = S.createElement(\"template\");\n        return s.innerHTML = t, s;\n    }\n}\nfunction b(r, t, e = r, s) {\n    var o, a;\n    if (t === E) return t;\n    let i = s !== void 0 ? (o = e._$Co) == null ? void 0 : o[s] : e._$Cl;\n    const n = N(t) ? void 0 : t._$litDirective$;\n    return (i == null ? void 0 : i.constructor) !== n && ((a = i == null ? void 0 : i._$AO) == null || a.call(i, !1), n === void 0 ? i = void 0 : (i = new n(r), i._$AT(r, e, s)), s !== void 0 ? (e._$Co ?? (e._$Co = []))[s] = i : e._$Cl = i), i !== void 0 && (t = b(r, i._$AS(r, t.values), i, s)), t;\n}\nlet Ut = class {\n    constructor(t, e){\n        this._$AV = [], this._$AN = void 0, this._$AD = t, this._$AM = e;\n    }\n    get parentNode() {\n        return this._$AM.parentNode;\n    }\n    get _$AU() {\n        return this._$AM._$AU;\n    }\n    u(t) {\n        const { el: { content: e }, parts: s } = this._$AD, i = ((t == null ? void 0 : t.creationScope) ?? S).importNode(e, !0);\n        y.currentNode = i;\n        let n = y.nextNode(), o = 0, a = 0, h = s[0];\n        for(; h !== void 0;){\n            if (o === h.index) {\n                let d;\n                h.type === 2 ? d = new M(n, n.nextSibling, this, t) : h.type === 1 ? d = new h.ctor(n, h.name, h.strings, this, t) : h.type === 6 && (d = new Nt(n, this, t)), this._$AV.push(d), h = s[++a];\n            }\n            o !== (h == null ? void 0 : h.index) && (n = y.nextNode(), o++);\n        }\n        return y.currentNode = S, i;\n    }\n    p(t) {\n        let e = 0;\n        for (const s of this._$AV)s !== void 0 && (s.strings !== void 0 ? (s._$AI(t, s, e), e += s.strings.length - 2) : s._$AI(t[e])), e++;\n    }\n};\nclass M {\n    get _$AU() {\n        var t;\n        return ((t = this._$AM) == null ? void 0 : t._$AU) ?? this._$Cv;\n    }\n    constructor(t, e, s, i){\n        this.type = 2, this._$AH = l, this._$AN = void 0, this._$AA = t, this._$AB = e, this._$AM = s, this.options = i, this._$Cv = (i == null ? void 0 : i.isConnected) ?? !0;\n    }\n    get parentNode() {\n        let t = this._$AA.parentNode;\n        const e = this._$AM;\n        return e !== void 0 && (t == null ? void 0 : t.nodeType) === 11 && (t = e.parentNode), t;\n    }\n    get startNode() {\n        return this._$AA;\n    }\n    get endNode() {\n        return this._$AB;\n    }\n    _$AI(t, e = this) {\n        t = b(this, t, e), N(t) ? t === l || t == null || t === \"\" ? (this._$AH !== l && this._$AR(), this._$AH = l) : t !== this._$AH && t !== E && this._(t) : t._$litType$ !== void 0 ? this.g(t) : t.nodeType !== void 0 ? this.$(t) : Et(t) ? this.T(t) : this._(t);\n    }\n    k(t) {\n        return this._$AA.parentNode.insertBefore(t, this._$AB);\n    }\n    $(t) {\n        this._$AH !== t && (this._$AR(), this._$AH = this.k(t));\n    }\n    _(t) {\n        this._$AH !== l && N(this._$AH) ? this._$AA.nextSibling.data = t : this.$(S.createTextNode(t)), this._$AH = t;\n    }\n    g(t) {\n        var n;\n        const { values: e, _$litType$: s } = t, i = typeof s == \"number\" ? this._$AC(t) : (s.el === void 0 && (s.el = R.createElement(lt(s.h, s.h[0]), this.options)), s);\n        if (((n = this._$AH) == null ? void 0 : n._$AD) === i) this._$AH.p(e);\n        else {\n            const o = new Ut(i, this), a = o.u(this.options);\n            o.p(e), this.$(a), this._$AH = o;\n        }\n    }\n    _$AC(t) {\n        let e = it.get(t.strings);\n        return e === void 0 && it.set(t.strings, e = new R(t)), e;\n    }\n    T(t) {\n        at(this._$AH) || (this._$AH = [], this._$AR());\n        const e = this._$AH;\n        let s, i = 0;\n        for (const n of t)i === e.length ? e.push(s = new M(this.k(O()), this.k(O()), this, this.options)) : s = e[i], s._$AI(n), i++;\n        i < e.length && (this._$AR(s && s._$AB.nextSibling, i), e.length = i);\n    }\n    _$AR(t = this._$AA.nextSibling, e) {\n        var s;\n        for((s = this._$AP) == null ? void 0 : s.call(this, !1, !0, e); t && t !== this._$AB;){\n            const i = t.nextSibling;\n            t.remove(), t = i;\n        }\n    }\n    setConnected(t) {\n        var e;\n        this._$AM === void 0 && (this._$Cv = t, (e = this._$AP) == null || e.call(this, t));\n    }\n}\nclass k {\n    get tagName() {\n        return this.element.tagName;\n    }\n    get _$AU() {\n        return this._$AM._$AU;\n    }\n    constructor(t, e, s, i, n){\n        this.type = 1, this._$AH = l, this._$AN = void 0, this.element = t, this.name = e, this._$AM = i, this.options = n, s.length > 2 || s[0] !== \"\" || s[1] !== \"\" ? (this._$AH = Array(s.length - 1).fill(new String), this.strings = s) : this._$AH = l;\n    }\n    _$AI(t, e = this, s, i) {\n        const n = this.strings;\n        let o = !1;\n        if (n === void 0) t = b(this, t, e, 0), o = !N(t) || t !== this._$AH && t !== E, o && (this._$AH = t);\n        else {\n            const a = t;\n            let h, d;\n            for(t = n[0], h = 0; h < n.length - 1; h++)d = b(this, a[s + h], e, h), d === E && (d = this._$AH[h]), o || (o = !N(d) || d !== this._$AH[h]), d === l ? t = l : t !== l && (t += (d ?? \"\") + n[h + 1]), this._$AH[h] = d;\n        }\n        o && !i && this.O(t);\n    }\n    O(t) {\n        t === l ? this.element.removeAttribute(this.name) : this.element.setAttribute(this.name, t ?? \"\");\n    }\n}\nclass Pt extends k {\n    constructor(){\n        super(...arguments), this.type = 3;\n    }\n    O(t) {\n        this.element[this.name] = t === l ? void 0 : t;\n    }\n}\nclass Tt extends k {\n    constructor(){\n        super(...arguments), this.type = 4;\n    }\n    O(t) {\n        this.element.toggleAttribute(this.name, !!t && t !== l);\n    }\n}\nclass Ot extends k {\n    constructor(t, e, s, i, n){\n        super(t, e, s, i, n), this.type = 5;\n    }\n    _$AI(t, e = this) {\n        if ((t = b(this, t, e, 0) ?? l) === E) return;\n        const s = this._$AH, i = t === l && s !== l || t.capture !== s.capture || t.once !== s.once || t.passive !== s.passive, n = t !== l && (s === l || i);\n        i && this.element.removeEventListener(this.name, this, s), n && this.element.addEventListener(this.name, this, t), this._$AH = t;\n    }\n    handleEvent(t) {\n        var e;\n        typeof this._$AH == \"function\" ? this._$AH.call(((e = this.options) == null ? void 0 : e.host) ?? this.element, t) : this._$AH.handleEvent(t);\n    }\n}\nclass Nt {\n    constructor(t, e, s){\n        this.element = t, this.type = 6, this._$AN = void 0, this._$AM = e, this.options = s;\n    }\n    get _$AU() {\n        return this._$AM._$AU;\n    }\n    _$AI(t) {\n        b(this, t);\n    }\n}\nconst z = U.litHtmlPolyfillSupport;\nz == null || z(R, M), (U.litHtmlVersions ?? (U.litHtmlVersions = [])).push(\"3.1.0\");\nconst Rt = (r, t, e)=>{\n    const s = (e == null ? void 0 : e.renderBefore) ?? t;\n    let i = s._$litPart$;\n    if (i === void 0) {\n        const n = (e == null ? void 0 : e.renderBefore) ?? null;\n        s._$litPart$ = i = new M(t.insertBefore(O(), n), n, void 0, e ?? {});\n    }\n    return i._$AI(r), i;\n}; /**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ \nlet P = class extends v {\n    constructor(){\n        super(...arguments), this.renderOptions = {\n            host: this\n        }, this._$Do = void 0;\n    }\n    createRenderRoot() {\n        var e;\n        const t = super.createRenderRoot();\n        return (e = this.renderOptions).renderBefore ?? (e.renderBefore = t.firstChild), t;\n    }\n    update(t) {\n        const e = this.render();\n        this.hasUpdated || (this.renderOptions.isConnected = this.isConnected), super.update(t), this._$Do = Rt(e, this.renderRoot, this.renderOptions);\n    }\n    connectedCallback() {\n        var t;\n        super.connectedCallback(), (t = this._$Do) == null || t.setConnected(!0);\n    }\n    disconnectedCallback() {\n        var t;\n        super.disconnectedCallback(), (t = this._$Do) == null || t.setConnected(!1);\n    }\n    render() {\n        return E;\n    }\n};\nvar rt;\nP._$litElement$ = !0, P.finalized = !0, (rt = globalThis.litElementHydrateSupport) == null || rt.call(globalThis, {\n    LitElement: P\n});\nconst B = globalThis.litElementPolyfillSupport;\nB == null || B({\n    LitElement: P\n});\n(globalThis.litElementVersions ?? (globalThis.litElementVersions = [])).push(\"4.0.2\"); /**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ \nconst Mt = (r)=>(t, e)=>{\n        e !== void 0 ? e.addInitializer(()=>{\n            customElements.define(r, t);\n        }) : customElements.define(r, t);\n    }; /**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ \nconst It = {\n    attribute: !0,\n    type: String,\n    converter: H,\n    reflect: !1,\n    hasChanged: K\n}, xt = (r = It, t, e)=>{\n    const { kind: s, metadata: i } = e;\n    let n = globalThis.litPropertyMetadata.get(i);\n    if (n === void 0 && globalThis.litPropertyMetadata.set(i, n = new Map), n.set(e.name, r), s === \"accessor\") {\n        const { name: o } = e;\n        return {\n            set (a) {\n                const h = t.get.call(this);\n                t.set.call(this, a), this.requestUpdate(o, h, r);\n            },\n            init (a) {\n                return a !== void 0 && this.C(o, void 0, r), a;\n            }\n        };\n    }\n    if (s === \"setter\") {\n        const { name: o } = e;\n        return function(a) {\n            const h = this[o];\n            t.call(this, a), this.requestUpdate(o, h, r);\n        };\n    }\n    throw Error(\"Unsupported decorator location: \" + s);\n};\nfunction $(r) {\n    return (t, e)=>typeof e == \"object\" ? xt(r, t, e) : ((s, i, n)=>{\n            const o = i.hasOwnProperty(n);\n            return i.constructor.createProperty(n, o ? {\n                ...s,\n                wrapped: !0\n            } : s), o ? Object.getOwnPropertyDescriptor(i, n) : void 0;\n        })(r, t, e);\n} /**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ \nconst Ht = (r)=>r.strings === void 0; /**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ \nconst Gt = {\n    ATTRIBUTE: 1,\n    CHILD: 2,\n    PROPERTY: 3,\n    BOOLEAN_ATTRIBUTE: 4,\n    EVENT: 5,\n    ELEMENT: 6\n}, Lt = (r)=>(...t)=>({\n            _$litDirective$: r,\n            values: t\n        });\nlet kt = class {\n    constructor(t){}\n    get _$AU() {\n        return this._$AM._$AU;\n    }\n    _$AT(t, e, s) {\n        this._$Ct = t, this._$AM = e, this._$Ci = s;\n    }\n    _$AS(t, e) {\n        return this.update(t, e);\n    }\n    update(t, e) {\n        return this.render(...e);\n    }\n}; /**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ \nconst T = (r, t)=>{\n    var s;\n    const e = r._$AN;\n    if (e === void 0) return !1;\n    for (const i of e)(s = i._$AO) == null || s.call(i, t, !1), T(i, t);\n    return !0;\n}, L = (r)=>{\n    let t, e;\n    do {\n        if ((t = r._$AM) === void 0) break;\n        e = t._$AN, e.delete(r), r = t;\n    }while ((e == null ? void 0 : e.size) === 0);\n}, dt = (r)=>{\n    for(let t; t = r._$AM; r = t){\n        let e = t._$AN;\n        if (e === void 0) t._$AN = e = new Set;\n        else if (e.has(r)) break;\n        e.add(r), zt(t);\n    }\n};\nfunction Wt(r) {\n    this._$AN !== void 0 ? (L(this), this._$AM = r, dt(this)) : this._$AM = r;\n}\nfunction Dt(r, t = !1, e = 0) {\n    const s = this._$AH, i = this._$AN;\n    if (i !== void 0 && i.size !== 0) if (t) if (Array.isArray(s)) for(let n = e; n < s.length; n++)T(s[n], !1), L(s[n]);\n    else s != null && (T(s, !1), L(s));\n    else T(this, r);\n}\nconst zt = (r)=>{\n    r.type == Gt.CHILD && (r._$AP ?? (r._$AP = Dt), r._$AQ ?? (r._$AQ = Wt));\n};\nclass Bt extends kt {\n    constructor(){\n        super(...arguments), this._$AN = void 0;\n    }\n    _$AT(t, e, s) {\n        super._$AT(t, e, s), dt(this), this.isConnected = t._$AU;\n    }\n    _$AO(t, e = !0) {\n        var s, i;\n        t !== this.isConnected && (this.isConnected = t, t ? (s = this.reconnected) == null || s.call(this) : (i = this.disconnected) == null || i.call(this)), e && (T(this, t), L(this));\n    }\n    setValue(t) {\n        if (Ht(this._$Ct)) this._$Ct._$AI(t, this);\n        else {\n            const e = [\n                ...this._$Ct._$AH\n            ];\n            e[this._$Ci] = t, this._$Ct._$AI(e, this, 0);\n        }\n    }\n    disconnected() {}\n    reconnected() {}\n} /**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ \nconst jt = ()=>new Vt;\nclass Vt {\n}\nconst j = new WeakMap, qt = Lt(class extends Bt {\n    render(r) {\n        return l;\n    }\n    update(r, [t]) {\n        var s;\n        const e = t !== this.G;\n        return e && this.G !== void 0 && this.ot(void 0), (e || this.rt !== this.lt) && (this.G = t, this.ct = (s = r.options) == null ? void 0 : s.host, this.ot(this.lt = r.element)), l;\n    }\n    ot(r) {\n        if (typeof this.G == \"function\") {\n            const t = this.ct ?? globalThis;\n            let e = j.get(t);\n            e === void 0 && (e = new WeakMap, j.set(t, e)), e.get(this.G) !== void 0 && this.G.call(this.ct, void 0), e.set(this.G, r), r !== void 0 && this.G.call(this.ct, r);\n        } else this.G.value = r;\n    }\n    get rt() {\n        var r, t;\n        return typeof this.G == \"function\" ? (r = j.get(this.ct ?? globalThis)) == null ? void 0 : r.get(this.G) : (t = this.G) == null ? void 0 : t.value;\n    }\n    disconnected() {\n        this.rt === this.lt && this.ot(void 0);\n    }\n    reconnected() {\n        this.ot(this.lt);\n    }\n});\nvar Kt = Object.defineProperty, Yt = Object.getOwnPropertyDescriptor, p = (r, t, e, s)=>{\n    for(var i = s > 1 ? void 0 : s ? Yt(t, e) : t, n = r.length - 1, o; n >= 0; n--)(o = r[n]) && (i = (s ? o(t, e, i) : o(i)) || i);\n    return s && i && Kt(t, e, i), i;\n};\nfunction Jt(r) {\n    return customElements.get(r) ? (t)=>t : Mt(r);\n}\nexports.GiscusWidget = class extends P {\n    constructor(){\n        super(), this.GISCUS_SESSION_KEY = \"giscus-session\", this.GISCUS_DEFAULT_HOST = \"https://giscus.app\", this.ERROR_SUGGESTION = \"Please consider reporting this error at https://github.com/giscus/giscus/issues/new.\", this.__session = \"\", this._iframeRef = jt(), this.messageEventHandler = this.handleMessageEvent.bind(this), this.hasLoaded = !1, this.host = this.GISCUS_DEFAULT_HOST, this.strict = \"0\", this.reactionsEnabled = \"1\", this.emitMetadata = \"0\", this.inputPosition = \"bottom\", this.theme = \"light\", this.lang = \"en\", this.loading = \"eager\", this.setupSession(), window.addEventListener(\"message\", this.messageEventHandler);\n    }\n    get iframeRef() {\n        var t;\n        return (t = this._iframeRef) == null ? void 0 : t.value;\n    }\n    get _host() {\n        try {\n            return new URL(this.host), this.host;\n        } catch  {\n            return this.GISCUS_DEFAULT_HOST;\n        }\n    }\n    disconnectedCallback() {\n        super.disconnectedCallback(), window.removeEventListener(\"message\", this.messageEventHandler);\n    }\n    _formatError(t) {\n        return `[giscus] An error occurred. Error message: \"${t}\".`;\n    }\n    setupSession() {\n        const t = location.href, e = new URL(t), s = localStorage.getItem(this.GISCUS_SESSION_KEY), i = e.searchParams.get(\"giscus\") ?? \"\";\n        if (this.__session = \"\", i) {\n            localStorage.setItem(this.GISCUS_SESSION_KEY, JSON.stringify(i)), this.__session = i, e.searchParams.delete(\"giscus\"), e.hash = \"\", history.replaceState(void 0, document.title, e.toString());\n            return;\n        }\n        if (s) try {\n            this.__session = JSON.parse(s);\n        } catch (n) {\n            localStorage.removeItem(this.GISCUS_SESSION_KEY), console.warn(`${this._formatError(n == null ? void 0 : n.message)} Session has been cleared.`);\n        }\n    }\n    signOut() {\n        localStorage.removeItem(this.GISCUS_SESSION_KEY), this.__session = \"\", this.update(new Map);\n    }\n    handleMessageEvent(t) {\n        if (t.origin !== this._host) return;\n        const { data: e } = t;\n        if (!(typeof e == \"object\" && e.giscus)) return;\n        if (this.iframeRef && e.giscus.resizeHeight && (this.iframeRef.style.height = `${e.giscus.resizeHeight}px`), e.giscus.signOut) {\n            console.info(\"[giscus] User has logged out. Session has been cleared.\"), this.signOut();\n            return;\n        }\n        if (!e.giscus.error) return;\n        const s = e.giscus.error;\n        if (s.includes(\"Bad credentials\") || s.includes(\"Invalid state value\") || s.includes(\"State has expired\")) {\n            if (localStorage.getItem(this.GISCUS_SESSION_KEY) !== null) {\n                console.warn(`${this._formatError(s)} Session has been cleared.`), this.signOut();\n                return;\n            }\n            console.error(`${this._formatError(s)} No session is stored initially. ${this.ERROR_SUGGESTION}`);\n        }\n        if (s.includes(\"Discussion not found\")) {\n            console.warn(`[giscus] ${s}. A new discussion will be created if a comment/reaction is submitted.`);\n            return;\n        }\n        console.error(`${this._formatError(s)} ${this.ERROR_SUGGESTION}`);\n    }\n    sendMessage(t) {\n        var e;\n        !((e = this.iframeRef) != null && e.contentWindow) || !this.hasLoaded || this.iframeRef.contentWindow.postMessage({\n            giscus: t\n        }, this._host);\n    }\n    updateConfig() {\n        const t = {\n            setConfig: {\n                repo: this.repo,\n                repoId: this.repoId,\n                category: this.category,\n                categoryId: this.categoryId,\n                term: this.getTerm(),\n                number: +this.getNumber(),\n                strict: this.strict === \"1\",\n                reactionsEnabled: this.reactionsEnabled === \"1\",\n                emitMetadata: this.emitMetadata === \"1\",\n                inputPosition: this.inputPosition,\n                theme: this.theme,\n                lang: this.lang\n            }\n        };\n        this.sendMessage(t);\n    }\n    firstUpdated() {\n        var t;\n        (t = this.iframeRef) == null || t.addEventListener(\"load\", ()=>{\n            var e;\n            (e = this.iframeRef) == null || e.classList.remove(\"loading\"), this.hasLoaded = !0, this.updateConfig();\n        });\n    }\n    requestUpdate(t, e, s) {\n        if (!this.hasUpdated || t === \"host\") {\n            super.requestUpdate(t, e, s);\n            return;\n        }\n        this.updateConfig();\n    }\n    getMetaContent(t, e = !1) {\n        const s = e ? `meta[property='og:${t}'],` : \"\", i = document.querySelector(s + `meta[name='${t}']`);\n        return i ? i.content : \"\";\n    }\n    _getCleanedUrl() {\n        const t = new URL(location.href);\n        return t.searchParams.delete(\"giscus\"), t.hash = \"\", t;\n    }\n    getTerm() {\n        switch(this.mapping){\n            case \"url\":\n                return this._getCleanedUrl().toString();\n            case \"title\":\n                return document.title;\n            case \"og:title\":\n                return this.getMetaContent(\"title\", !0);\n            case \"specific\":\n                return this.term ?? \"\";\n            case \"number\":\n                return \"\";\n            case \"pathname\":\n            default:\n                return location.pathname.length < 2 ? \"index\" : location.pathname.substring(1).replace(/\\.\\w+$/, \"\");\n        }\n    }\n    getNumber() {\n        return this.mapping === \"number\" ? this.term ?? \"\" : \"\";\n    }\n    getIframeSrc() {\n        const t = this._getCleanedUrl().toString(), e = `${t}${this.id ? \"#\" + this.id : \"\"}`, s = this.getMetaContent(\"description\", !0), i = this.getMetaContent(\"giscus:backlink\") || t, n = {\n            origin: e,\n            session: this.__session,\n            repo: this.repo,\n            repoId: this.repoId ?? \"\",\n            category: this.category ?? \"\",\n            categoryId: this.categoryId ?? \"\",\n            term: this.getTerm(),\n            number: this.getNumber(),\n            strict: this.strict,\n            reactionsEnabled: this.reactionsEnabled,\n            emitMetadata: this.emitMetadata,\n            inputPosition: this.inputPosition,\n            theme: this.theme,\n            description: s,\n            backLink: i\n        }, o = this._host, a = this.lang ? `/${this.lang}` : \"\", h = new URLSearchParams(n);\n        return `${o}${a}/widget?${h.toString()}`;\n    }\n    render() {\n        return Ct`\n      <iframe\n        title=\"Comments\"\n        scrolling=\"no\"\n        class=\"loading\"\n        ${qt(this._iframeRef)}\n        src=${this.getIframeSrc()}\n        loading=${this.loading}\n        allow=\"clipboard-write\"\n        part=\"iframe\"\n      ></iframe>\n    `;\n    }\n};\nexports.GiscusWidget.styles = pt`\n    :host,\n    iframe {\n      width: 100%;\n      border: none;\n      min-height: 150px;\n      color-scheme: light dark;\n    }\n\n    iframe.loading {\n      opacity: 0;\n    }\n  `;\np([\n    $({\n        reflect: !0\n    })\n], exports.GiscusWidget.prototype, \"host\", 2);\np([\n    $({\n        reflect: !0\n    })\n], exports.GiscusWidget.prototype, \"repo\", 2);\np([\n    $({\n        reflect: !0\n    })\n], exports.GiscusWidget.prototype, \"repoId\", 2);\np([\n    $({\n        reflect: !0\n    })\n], exports.GiscusWidget.prototype, \"category\", 2);\np([\n    $({\n        reflect: !0\n    })\n], exports.GiscusWidget.prototype, \"categoryId\", 2);\np([\n    $({\n        reflect: !0\n    })\n], exports.GiscusWidget.prototype, \"mapping\", 2);\np([\n    $({\n        reflect: !0\n    })\n], exports.GiscusWidget.prototype, \"term\", 2);\np([\n    $({\n        reflect: !0\n    })\n], exports.GiscusWidget.prototype, \"strict\", 2);\np([\n    $({\n        reflect: !0\n    })\n], exports.GiscusWidget.prototype, \"reactionsEnabled\", 2);\np([\n    $({\n        reflect: !0\n    })\n], exports.GiscusWidget.prototype, \"emitMetadata\", 2);\np([\n    $({\n        reflect: !0\n    })\n], exports.GiscusWidget.prototype, \"inputPosition\", 2);\np([\n    $({\n        reflect: !0\n    })\n], exports.GiscusWidget.prototype, \"theme\", 2);\np([\n    $({\n        reflect: !0\n    })\n], exports.GiscusWidget.prototype, \"lang\", 2);\np([\n    $({\n        reflect: !0\n    })\n], exports.GiscusWidget.prototype, \"loading\", 2);\nexports.GiscusWidget = p([\n    Jt(\"giscus-widget\")\n], exports.GiscusWidget);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGdpc2N1cytyZWFjdEAyLjQuMF9yZWFjdC1kb21AMTguMi4wX3JlYWN0QDE4LjIuMC9ub2RlX21vZHVsZXMvQGdpc2N1cy9yZWFjdC9kaXN0L2dpc2N1cy15RFBWWlc0YS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUFBQSxPQUFPQyxjQUFjLENBQUNDLFNBQVFDLE9BQU9DLFdBQVcsRUFBQztJQUFDQyxPQUFNO0FBQVEsSUFBRzs7OztDQUkvRTtBQUFFLE1BQU1DLElBQUVDLFlBQVdDLElBQUVGLEVBQUVHLFVBQVUsSUFBR0gsQ0FBQUEsRUFBRUksUUFBUSxLQUFHLEtBQUssS0FBR0osRUFBRUksUUFBUSxDQUFDQyxZQUFZLEtBQUcsd0JBQXVCQyxTQUFTQyxTQUFTLElBQUUsYUFBWUMsY0FBY0QsU0FBUyxFQUFDRSxJQUFFWixVQUFTYSxJQUFFLElBQUlDO0FBQVEsSUFBSUMsS0FBRztJQUFNQyxZQUFZQyxDQUFDLEVBQUNDLENBQUMsRUFBQ0MsQ0FBQyxDQUFDO1FBQUMsSUFBRyxJQUFJLENBQUNDLFlBQVksR0FBQyxDQUFDLEdBQUVELE1BQUlQLEdBQUUsTUFBTVMsTUFBTTtRQUFxRSxJQUFJLENBQUNDLE9BQU8sR0FBQ0wsR0FBRSxJQUFJLENBQUNBLENBQUMsR0FBQ0M7SUFBQztJQUFDLElBQUlLLGFBQVk7UUFBQyxJQUFJTixJQUFFLElBQUksQ0FBQ08sQ0FBQztRQUFDLE1BQU1OLElBQUUsSUFBSSxDQUFDRCxDQUFDO1FBQUMsSUFBR1osS0FBR1ksTUFBSSxLQUFLLEdBQUU7WUFBQyxNQUFNRSxJQUFFRCxNQUFJLEtBQUssS0FBR0EsRUFBRU8sTUFBTSxLQUFHO1lBQUVOLEtBQUlGLENBQUFBLElBQUVKLEVBQUVhLEdBQUcsQ0FBQ1IsRUFBQyxHQUFHRCxNQUFJLEtBQUssS0FBSSxFQUFDLElBQUksQ0FBQ08sQ0FBQyxHQUFDUCxJQUFFLElBQUlOLGFBQVksRUFBR2dCLFdBQVcsQ0FBQyxJQUFJLENBQUNM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QUFFO0lBQUNVLEVBQUU7UUFBQ3RNLFNBQVEsQ0FBQztJQUFDO0NBQUcsRUFBQ2xGLFFBQVFnVyxZQUFZLENBQUNyVixTQUFTLEVBQUMsUUFBTztBQUFHbVEsRUFBRTtJQUFDVSxFQUFFO1FBQUN0TSxTQUFRLENBQUM7SUFBQztDQUFHLEVBQUNsRixRQUFRZ1csWUFBWSxDQUFDclYsU0FBUyxFQUFDLFdBQVU7QUFBR1gsb0JBQW9CLEdBQUM4USxFQUFFO0lBQUNpRixHQUFHO0NBQWlCLEVBQUMvVixRQUFRZ1csWUFBWSIsInNvdXJjZXMiOlsid2VicGFjazovL3RhaWx3aW5kLW5leHRqcy1zdGFydGVyLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vQGdpc2N1cytyZWFjdEAyLjQuMF9yZWFjdC1kb21AMTguMi4wX3JlYWN0QDE4LjIuMC9ub2RlX21vZHVsZXMvQGdpc2N1cy9yZWFjdC9kaXN0L2dpc2N1cy15RFBWWlc0YS5qcz8yNDQzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6XCJNb2R1bGVcIn0pOy8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBCU0QtMy1DbGF1c2VcbiAqL2NvbnN0IHg9Z2xvYmFsVGhpcyxWPXguU2hhZG93Um9vdCYmKHguU2hhZHlDU1M9PT12b2lkIDB8fHguU2hhZHlDU1MubmF0aXZlU2hhZG93KSYmXCJhZG9wdGVkU3R5bGVTaGVldHNcImluIERvY3VtZW50LnByb3RvdHlwZSYmXCJyZXBsYWNlXCJpbiBDU1NTdHlsZVNoZWV0LnByb3RvdHlwZSxxPVN5bWJvbCgpLFk9bmV3IFdlYWtNYXA7bGV0IG50PWNsYXNze2NvbnN0cnVjdG9yKHQsZSxzKXtpZih0aGlzLl8kY3NzUmVzdWx0JD0hMCxzIT09cSl0aHJvdyBFcnJvcihcIkNTU1Jlc3VsdCBpcyBub3QgY29uc3RydWN0YWJsZS4gVXNlIGB1bnNhZmVDU1NgIG9yIGBjc3NgIGluc3RlYWQuXCIpO3RoaXMuY3NzVGV4dD10LHRoaXMudD1lfWdldCBzdHlsZVNoZWV0KCl7bGV0IHQ9dGhpcy5vO2NvbnN0IGU9dGhpcy50O2lmKFYmJnQ9PT12b2lkIDApe2NvbnN0IHM9ZSE9PXZvaWQgMCYmZS5sZW5ndGg9PT0xO3MmJih0PVkuZ2V0KGUpKSx0PT09dm9pZCAwJiYoKHRoaXMubz10PW5ldyBDU1NTdHlsZVNoZWV0KS5yZXBsYWNlU3luYyh0aGlzLmNzc1RleHQpLHMmJlkuc2V0KGUsdCkpfXJldHVybiB0fXRvU3RyaW5nKCl7cmV0dXJuIHRoaXMuY3NzVGV4dH19O2NvbnN0IHV0PXI9Pm5ldyBudCh0eXBlb2Ygcj09XCJzdHJpbmdcIj9yOnIrXCJcIix2b2lkIDAscSkscHQ9KHIsLi4udCk9Pntjb25zdCBlPXIubGVuZ3RoPT09MT9yWzBdOnQucmVkdWNlKChzLGksbik9PnMrKG89PntpZihvLl8kY3NzUmVzdWx0JD09PSEwKXJldHVybiBvLmNzc1RleHQ7aWYodHlwZW9mIG89PVwibnVtYmVyXCIpcmV0dXJuIG87dGhyb3cgRXJyb3IoXCJWYWx1ZSBwYXNzZWQgdG8gJ2NzcycgZnVuY3Rpb24gbXVzdCBiZSBhICdjc3MnIGZ1bmN0aW9uIHJlc3VsdDogXCIrbytcIi4gVXNlICd1bnNhZmVDU1MnIHRvIHBhc3Mgbm9uLWxpdGVyYWwgdmFsdWVzLCBidXQgdGFrZSBjYXJlIHRvIGVuc3VyZSBwYWdlIHNlY3VyaXR5LlwiKX0pKGkpK3JbbisxXSxyWzBdKTtyZXR1cm4gbmV3IG50KGUscixxKX0sJHQ9KHIsdCk9PntpZihWKXIuYWRvcHRlZFN0eWxlU2hlZXRzPXQubWFwKGU9PmUgaW5zdGFuY2VvZiBDU1NTdHlsZVNoZWV0P2U6ZS5zdHlsZVNoZWV0KTtlbHNlIGZvcihjb25zdCBlIG9mIHQpe2NvbnN0IHM9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpLGk9eC5saXROb25jZTtpIT09dm9pZCAwJiZzLnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsaSkscy50ZXh0Q29udGVudD1lLmNzc1RleHQsci5hcHBlbmRDaGlsZChzKX19LEo9Vj9yPT5yOnI9PnIgaW5zdGFuY2VvZiBDU1NTdHlsZVNoZWV0Pyh0PT57bGV0IGU9XCJcIjtmb3IoY29uc3QgcyBvZiB0LmNzc1J1bGVzKWUrPXMuY3NzVGV4dDtyZXR1cm4gdXQoZSl9KShyKTpyOy8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBMTENcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBCU0QtMy1DbGF1c2VcbiAqL2NvbnN0e2lzOmd0LGRlZmluZVByb3BlcnR5Ol90LGdldE93blByb3BlcnR5RGVzY3JpcHRvcjpmdCxnZXRPd25Qcm9wZXJ0eU5hbWVzOm10LGdldE93blByb3BlcnR5U3ltYm9sczpBdCxnZXRQcm90b3R5cGVPZjp5dH09T2JqZWN0LG09Z2xvYmFsVGhpcyxGPW0udHJ1c3RlZFR5cGVzLFN0PUY/Ri5lbXB0eVNjcmlwdDpcIlwiLFc9bS5yZWFjdGl2ZUVsZW1lbnRQb2x5ZmlsbFN1cHBvcnQsdz0ocix0KT0+cixIPXt0b0F0dHJpYnV0ZShyLHQpe3N3aXRjaCh0KXtjYXNlIEJvb2xlYW46cj1yP1N0Om51bGw7YnJlYWs7Y2FzZSBPYmplY3Q6Y2FzZSBBcnJheTpyPXI9PW51bGw/cjpKU09OLnN0cmluZ2lmeShyKX1yZXR1cm4gcn0sZnJvbUF0dHJpYnV0ZShyLHQpe2xldCBlPXI7c3dpdGNoKHQpe2Nhc2UgQm9vbGVhbjplPXIhPT1udWxsO2JyZWFrO2Nhc2UgTnVtYmVyOmU9cj09PW51bGw/bnVsbDpOdW1iZXIocik7YnJlYWs7Y2FzZSBPYmplY3Q6Y2FzZSBBcnJheTp0cnl7ZT1KU09OLnBhcnNlKHIpfWNhdGNoe2U9bnVsbH19cmV0dXJuIGV9fSxLPShyLHQpPT4hZ3Qocix0KSxRPXthdHRyaWJ1dGU6ITAsdHlwZTpTdHJpbmcsY29udmVydGVyOkgscmVmbGVjdDohMSxoYXNDaGFuZ2VkOkt9O1N5bWJvbC5tZXRhZGF0YT8/KFN5bWJvbC5tZXRhZGF0YT1TeW1ib2woXCJtZXRhZGF0YVwiKSksbS5saXRQcm9wZXJ0eU1ldGFkYXRhPz8obS5saXRQcm9wZXJ0eU1ldGFkYXRhPW5ldyBXZWFrTWFwKTtjbGFzcyB2IGV4dGVuZHMgSFRNTEVsZW1lbnR7c3RhdGljIGFkZEluaXRpYWxpemVyKHQpe3RoaXMuXyRFaSgpLCh0aGlzLmw/Pyh0aGlzLmw9W10pKS5wdXNoKHQpfXN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCl7cmV0dXJuIHRoaXMuZmluYWxpemUoKSx0aGlzLl8kRWgmJlsuLi50aGlzLl8kRWgua2V5cygpXX1zdGF0aWMgY3JlYXRlUHJvcGVydHkodCxlPVEpe2lmKGUuc3RhdGUmJihlLmF0dHJpYnV0ZT0hMSksdGhpcy5fJEVpKCksdGhpcy5lbGVtZW50UHJvcGVydGllcy5zZXQodCxlKSwhZS5ub0FjY2Vzc29yKXtjb25zdCBzPVN5bWJvbCgpLGk9dGhpcy5nZXRQcm9wZXJ0eURlc2NyaXB0b3IodCxzLGUpO2khPT12b2lkIDAmJl90KHRoaXMucHJvdG90eXBlLHQsaSl9fXN0YXRpYyBnZXRQcm9wZXJ0eURlc2NyaXB0b3IodCxlLHMpe2NvbnN0e2dldDppLHNldDpufT1mdCh0aGlzLnByb3RvdHlwZSx0KT8/e2dldCgpe3JldHVybiB0aGlzW2VdfSxzZXQobyl7dGhpc1tlXT1vfX07cmV0dXJue2dldCgpe3JldHVybiBpPT1udWxsP3ZvaWQgMDppLmNhbGwodGhpcyl9LHNldChvKXtjb25zdCBhPWk9PW51bGw/dm9pZCAwOmkuY2FsbCh0aGlzKTtuLmNhbGwodGhpcyxvKSx0aGlzLnJlcXVlc3RVcGRhdGUodCxhLHMpfSxjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMH19c3RhdGljIGdldFByb3BlcnR5T3B0aW9ucyh0KXtyZXR1cm4gdGhpcy5lbGVtZW50UHJvcGVydGllcy5nZXQodCk/P1F9c3RhdGljIF8kRWkoKXtpZih0aGlzLmhhc093blByb3BlcnR5KHcoXCJlbGVtZW50UHJvcGVydGllc1wiKSkpcmV0dXJuO2NvbnN0IHQ9eXQodGhpcyk7dC5maW5hbGl6ZSgpLHQubCE9PXZvaWQgMCYmKHRoaXMubD1bLi4udC5sXSksdGhpcy5lbGVtZW50UHJvcGVydGllcz1uZXcgTWFwKHQuZWxlbWVudFByb3BlcnRpZXMpfXN0YXRpYyBmaW5hbGl6ZSgpe2lmKHRoaXMuaGFzT3duUHJvcGVydHkodyhcImZpbmFsaXplZFwiKSkpcmV0dXJuO2lmKHRoaXMuZmluYWxpemVkPSEwLHRoaXMuXyRFaSgpLHRoaXMuaGFzT3duUHJvcGVydHkodyhcInByb3BlcnRpZXNcIikpKXtjb25zdCBlPXRoaXMucHJvcGVydGllcyxzPVsuLi5tdChlKSwuLi5BdChlKV07Zm9yKGNvbnN0IGkgb2Ygcyl0aGlzLmNyZWF0ZVByb3BlcnR5KGksZVtpXSl9Y29uc3QgdD10aGlzW1N5bWJvbC5tZXRhZGF0YV07aWYodCE9PW51bGwpe2NvbnN0IGU9bGl0UHJvcGVydHlNZXRhZGF0YS5nZXQodCk7aWYoZSE9PXZvaWQgMClmb3IoY29uc3RbcyxpXW9mIGUpdGhpcy5lbGVtZW50UHJvcGVydGllcy5zZXQocyxpKX10aGlzLl8kRWg9bmV3IE1hcDtmb3IoY29uc3RbZSxzXW9mIHRoaXMuZWxlbWVudFByb3BlcnRpZXMpe2NvbnN0IGk9dGhpcy5fJEV1KGUscyk7aSE9PXZvaWQgMCYmdGhpcy5fJEVoLnNldChpLGUpfXRoaXMuZWxlbWVudFN0eWxlcz10aGlzLmZpbmFsaXplU3R5bGVzKHRoaXMuc3R5bGVzKX1zdGF0aWMgZmluYWxpemVTdHlsZXModCl7Y29uc3QgZT1bXTtpZihBcnJheS5pc0FycmF5KHQpKXtjb25zdCBzPW5ldyBTZXQodC5mbGF0KDEvMCkucmV2ZXJzZSgpKTtmb3IoY29uc3QgaSBvZiBzKWUudW5zaGlmdChKKGkpKX1lbHNlIHQhPT12b2lkIDAmJmUucHVzaChKKHQpKTtyZXR1cm4gZX1zdGF0aWMgXyRFdSh0LGUpe2NvbnN0IHM9ZS5hdHRyaWJ1dGU7cmV0dXJuIHM9PT0hMT92b2lkIDA6dHlwZW9mIHM9PVwic3RyaW5nXCI/czp0eXBlb2YgdD09XCJzdHJpbmdcIj90LnRvTG93ZXJDYXNlKCk6dm9pZCAwfWNvbnN0cnVjdG9yKCl7c3VwZXIoKSx0aGlzLl8kRXA9dm9pZCAwLHRoaXMuaXNVcGRhdGVQZW5kaW5nPSExLHRoaXMuaGFzVXBkYXRlZD0hMSx0aGlzLl8kRW09bnVsbCx0aGlzLl8kRXYoKX1fJEV2KCl7dmFyIHQ7dGhpcy5fJEVnPW5ldyBQcm9taXNlKGU9PnRoaXMuZW5hYmxlVXBkYXRpbmc9ZSksdGhpcy5fJEFMPW5ldyBNYXAsdGhpcy5fJEVTKCksdGhpcy5yZXF1ZXN0VXBkYXRlKCksKHQ9dGhpcy5jb25zdHJ1Y3Rvci5sKT09bnVsbHx8dC5mb3JFYWNoKGU9PmUodGhpcykpfWFkZENvbnRyb2xsZXIodCl7dmFyIGU7KHRoaXMuXyRFXz8/KHRoaXMuXyRFXz1uZXcgU2V0KSkuYWRkKHQpLHRoaXMucmVuZGVyUm9vdCE9PXZvaWQgMCYmdGhpcy5pc0Nvbm5lY3RlZCYmKChlPXQuaG9zdENvbm5lY3RlZCk9PW51bGx8fGUuY2FsbCh0KSl9cmVtb3ZlQ29udHJvbGxlcih0KXt2YXIgZTsoZT10aGlzLl8kRV8pPT1udWxsfHxlLmRlbGV0ZSh0KX1fJEVTKCl7Y29uc3QgdD1uZXcgTWFwLGU9dGhpcy5jb25zdHJ1Y3Rvci5lbGVtZW50UHJvcGVydGllcztmb3IoY29uc3QgcyBvZiBlLmtleXMoKSl0aGlzLmhhc093blByb3BlcnR5KHMpJiYodC5zZXQocyx0aGlzW3NdKSxkZWxldGUgdGhpc1tzXSk7dC5zaXplPjAmJih0aGlzLl8kRXA9dCl9Y3JlYXRlUmVuZGVyUm9vdCgpe2NvbnN0IHQ9dGhpcy5zaGFkb3dSb290Pz90aGlzLmF0dGFjaFNoYWRvdyh0aGlzLmNvbnN0cnVjdG9yLnNoYWRvd1Jvb3RPcHRpb25zKTtyZXR1cm4gJHQodCx0aGlzLmNvbnN0cnVjdG9yLmVsZW1lbnRTdHlsZXMpLHR9Y29ubmVjdGVkQ2FsbGJhY2soKXt2YXIgdDt0aGlzLnJlbmRlclJvb3Q/Pyh0aGlzLnJlbmRlclJvb3Q9dGhpcy5jcmVhdGVSZW5kZXJSb290KCkpLHRoaXMuZW5hYmxlVXBkYXRpbmcoITApLCh0PXRoaXMuXyRFXyk9PW51bGx8fHQuZm9yRWFjaChlPT57dmFyIHM7cmV0dXJuKHM9ZS5ob3N0Q29ubmVjdGVkKT09bnVsbD92b2lkIDA6cy5jYWxsKGUpfSl9ZW5hYmxlVXBkYXRpbmcodCl7fWRpc2Nvbm5lY3RlZENhbGxiYWNrKCl7dmFyIHQ7KHQ9dGhpcy5fJEVfKT09bnVsbHx8dC5mb3JFYWNoKGU9Pnt2YXIgcztyZXR1cm4ocz1lLmhvc3REaXNjb25uZWN0ZWQpPT1udWxsP3ZvaWQgMDpzLmNhbGwoZSl9KX1hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sodCxlLHMpe3RoaXMuXyRBSyh0LHMpfV8kRU8odCxlKXt2YXIgbjtjb25zdCBzPXRoaXMuY29uc3RydWN0b3IuZWxlbWVudFByb3BlcnRpZXMuZ2V0KHQpLGk9dGhpcy5jb25zdHJ1Y3Rvci5fJEV1KHQscyk7aWYoaSE9PXZvaWQgMCYmcy5yZWZsZWN0PT09ITApe2NvbnN0IG89KCgobj1zLmNvbnZlcnRlcik9PW51bGw/dm9pZCAwOm4udG9BdHRyaWJ1dGUpIT09dm9pZCAwP3MuY29udmVydGVyOkgpLnRvQXR0cmlidXRlKGUscy50eXBlKTt0aGlzLl8kRW09dCxvPT1udWxsP3RoaXMucmVtb3ZlQXR0cmlidXRlKGkpOnRoaXMuc2V0QXR0cmlidXRlKGksbyksdGhpcy5fJEVtPW51bGx9fV8kQUsodCxlKXt2YXIgbjtjb25zdCBzPXRoaXMuY29uc3RydWN0b3IsaT1zLl8kRWguZ2V0KHQpO2lmKGkhPT12b2lkIDAmJnRoaXMuXyRFbSE9PWkpe2NvbnN0IG89cy5nZXRQcm9wZXJ0eU9wdGlvbnMoaSksYT10eXBlb2Ygby5jb252ZXJ0ZXI9PVwiZnVuY3Rpb25cIj97ZnJvbUF0dHJpYnV0ZTpvLmNvbnZlcnRlcn06KChuPW8uY29udmVydGVyKT09bnVsbD92b2lkIDA6bi5mcm9tQXR0cmlidXRlKSE9PXZvaWQgMD9vLmNvbnZlcnRlcjpIO3RoaXMuXyRFbT1pLHRoaXNbaV09YS5mcm9tQXR0cmlidXRlKGUsby50eXBlKSx0aGlzLl8kRW09bnVsbH19cmVxdWVzdFVwZGF0ZSh0LGUscyxpPSExLG4pe2lmKHQhPT12b2lkIDApe2lmKHM/PyhzPXRoaXMuY29uc3RydWN0b3IuZ2V0UHJvcGVydHlPcHRpb25zKHQpKSwhKHMuaGFzQ2hhbmdlZD8/SykoaT9uOnRoaXNbdF0sZSkpcmV0dXJuO3RoaXMuQyh0LGUscyl9dGhpcy5pc1VwZGF0ZVBlbmRpbmc9PT0hMSYmKHRoaXMuXyRFZz10aGlzLl8kRVAoKSl9Qyh0LGUscyl7dGhpcy5fJEFMLmhhcyh0KXx8dGhpcy5fJEFMLnNldCh0LGUpLHMucmVmbGVjdD09PSEwJiZ0aGlzLl8kRW0hPT10JiYodGhpcy5fJEVqPz8odGhpcy5fJEVqPW5ldyBTZXQpKS5hZGQodCl9YXN5bmMgXyRFUCgpe3RoaXMuaXNVcGRhdGVQZW5kaW5nPSEwO3RyeXthd2FpdCB0aGlzLl8kRWd9Y2F0Y2goZSl7UHJvbWlzZS5yZWplY3QoZSl9Y29uc3QgdD10aGlzLnNjaGVkdWxlVXBkYXRlKCk7cmV0dXJuIHQhPW51bGwmJmF3YWl0IHQsIXRoaXMuaXNVcGRhdGVQZW5kaW5nfXNjaGVkdWxlVXBkYXRlKCl7cmV0dXJuIHRoaXMucGVyZm9ybVVwZGF0ZSgpfXBlcmZvcm1VcGRhdGUoKXt2YXIgcztpZighdGhpcy5pc1VwZGF0ZVBlbmRpbmcpcmV0dXJuO2lmKCF0aGlzLmhhc1VwZGF0ZWQpe2lmKHRoaXMucmVuZGVyUm9vdD8/KHRoaXMucmVuZGVyUm9vdD10aGlzLmNyZWF0ZVJlbmRlclJvb3QoKSksdGhpcy5fJEVwKXtmb3IoY29uc3RbbixvXW9mIHRoaXMuXyRFcCl0aGlzW25dPW87dGhpcy5fJEVwPXZvaWQgMH1jb25zdCBpPXRoaXMuY29uc3RydWN0b3IuZWxlbWVudFByb3BlcnRpZXM7aWYoaS5zaXplPjApZm9yKGNvbnN0W24sb11vZiBpKW8ud3JhcHBlZCE9PSEwfHx0aGlzLl8kQUwuaGFzKG4pfHx0aGlzW25dPT09dm9pZCAwfHx0aGlzLkMobix0aGlzW25dLG8pfWxldCB0PSExO2NvbnN0IGU9dGhpcy5fJEFMO3RyeXt0PXRoaXMuc2hvdWxkVXBkYXRlKGUpLHQ/KHRoaXMud2lsbFVwZGF0ZShlKSwocz10aGlzLl8kRV8pPT1udWxsfHxzLmZvckVhY2goaT0+e3ZhciBuO3JldHVybihuPWkuaG9zdFVwZGF0ZSk9PW51bGw/dm9pZCAwOm4uY2FsbChpKX0pLHRoaXMudXBkYXRlKGUpKTp0aGlzLl8kRVQoKX1jYXRjaChpKXt0aHJvdyB0PSExLHRoaXMuXyRFVCgpLGl9dCYmdGhpcy5fJEFFKGUpfXdpbGxVcGRhdGUodCl7fV8kQUUodCl7dmFyIGU7KGU9dGhpcy5fJEVfKT09bnVsbHx8ZS5mb3JFYWNoKHM9Pnt2YXIgaTtyZXR1cm4oaT1zLmhvc3RVcGRhdGVkKT09bnVsbD92b2lkIDA6aS5jYWxsKHMpfSksdGhpcy5oYXNVcGRhdGVkfHwodGhpcy5oYXNVcGRhdGVkPSEwLHRoaXMuZmlyc3RVcGRhdGVkKHQpKSx0aGlzLnVwZGF0ZWQodCl9XyRFVCgpe3RoaXMuXyRBTD1uZXcgTWFwLHRoaXMuaXNVcGRhdGVQZW5kaW5nPSExfWdldCB1cGRhdGVDb21wbGV0ZSgpe3JldHVybiB0aGlzLmdldFVwZGF0ZUNvbXBsZXRlKCl9Z2V0VXBkYXRlQ29tcGxldGUoKXtyZXR1cm4gdGhpcy5fJEVnfXNob3VsZFVwZGF0ZSh0KXtyZXR1cm4hMH11cGRhdGUodCl7dGhpcy5fJEVqJiYodGhpcy5fJEVqPXRoaXMuXyRFai5mb3JFYWNoKGU9PnRoaXMuXyRFTyhlLHRoaXNbZV0pKSksdGhpcy5fJEVUKCl9dXBkYXRlZCh0KXt9Zmlyc3RVcGRhdGVkKHQpe319di5lbGVtZW50U3R5bGVzPVtdLHYuc2hhZG93Um9vdE9wdGlvbnM9e21vZGU6XCJvcGVuXCJ9LHZbdyhcImVsZW1lbnRQcm9wZXJ0aWVzXCIpXT1uZXcgTWFwLHZbdyhcImZpbmFsaXplZFwiKV09bmV3IE1hcCxXPT1udWxsfHxXKHtSZWFjdGl2ZUVsZW1lbnQ6dn0pLChtLnJlYWN0aXZlRWxlbWVudFZlcnNpb25zPz8obS5yZWFjdGl2ZUVsZW1lbnRWZXJzaW9ucz1bXSkpLnB1c2goXCIyLjAuMlwiKTsvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQlNELTMtQ2xhdXNlXG4gKi9jb25zdCBVPWdsb2JhbFRoaXMsRz1VLnRydXN0ZWRUeXBlcyxaPUc/Ry5jcmVhdGVQb2xpY3koXCJsaXQtaHRtbFwiLHtjcmVhdGVIVE1MOnI9PnJ9KTp2b2lkIDAsb3Q9XCIkbGl0JFwiLGY9YGxpdCQkeyhNYXRoLnJhbmRvbSgpK1wiXCIpLnNsaWNlKDkpfSRgLGh0PVwiP1wiK2YsdnQ9YDwke2h0fT5gLFM9ZG9jdW1lbnQsTz0oKT0+Uy5jcmVhdGVDb21tZW50KFwiXCIpLE49cj0+cj09PW51bGx8fHR5cGVvZiByIT1cIm9iamVjdFwiJiZ0eXBlb2YgciE9XCJmdW5jdGlvblwiLGF0PUFycmF5LmlzQXJyYXksRXQ9cj0+YXQocil8fHR5cGVvZihyPT1udWxsP3ZvaWQgMDpyW1N5bWJvbC5pdGVyYXRvcl0pPT1cImZ1bmN0aW9uXCIsRD1gWyBcdFxuXFxmXFxyXWAsQz0vPCg/OighLS18XFwvW15hLXpBLVpdKXwoXFwvP1thLXpBLVpdW14+XFxzXSopfChcXC8/JCkpL2csWD0vLS0+L2csdHQ9Lz4vZyxBPVJlZ0V4cChgPnwke0R9KD86KFteXFxcXHNcIic+PS9dKykoJHtEfSo9JHtEfSooPzpbXiBcdFxuXFxmXFxyXCInXFxgPD49XXwoXCJ8Jyl8KSl8JClgLFwiZ1wiKSxldD0vJy9nLHN0PS9cIi9nLGN0PS9eKD86c2NyaXB0fHN0eWxlfHRleHRhcmVhfHRpdGxlKSQvaSxidD1yPT4odCwuLi5lKT0+KHtfJGxpdFR5cGUkOnIsc3RyaW5nczp0LHZhbHVlczplfSksQ3Q9YnQoMSksRT1TeW1ib2wuZm9yKFwibGl0LW5vQ2hhbmdlXCIpLGw9U3ltYm9sLmZvcihcImxpdC1ub3RoaW5nXCIpLGl0PW5ldyBXZWFrTWFwLHk9Uy5jcmVhdGVUcmVlV2Fsa2VyKFMsMTI5KTtmdW5jdGlvbiBsdChyLHQpe2lmKCFBcnJheS5pc0FycmF5KHIpfHwhci5oYXNPd25Qcm9wZXJ0eShcInJhd1wiKSl0aHJvdyBFcnJvcihcImludmFsaWQgdGVtcGxhdGUgc3RyaW5ncyBhcnJheVwiKTtyZXR1cm4gWiE9PXZvaWQgMD9aLmNyZWF0ZUhUTUwodCk6dH1jb25zdCB3dD0ocix0KT0+e2NvbnN0IGU9ci5sZW5ndGgtMSxzPVtdO2xldCBpLG49dD09PTI/XCI8c3ZnPlwiOlwiXCIsbz1DO2ZvcihsZXQgYT0wO2E8ZTthKyspe2NvbnN0IGg9clthXTtsZXQgZCx1LGM9LTEsZz0wO2Zvcig7ZzxoLmxlbmd0aCYmKG8ubGFzdEluZGV4PWcsdT1vLmV4ZWMoaCksdSE9PW51bGwpOylnPW8ubGFzdEluZGV4LG89PT1DP3VbMV09PT1cIiEtLVwiP289WDp1WzFdIT09dm9pZCAwP289dHQ6dVsyXSE9PXZvaWQgMD8oY3QudGVzdCh1WzJdKSYmKGk9UmVnRXhwKFwiPC9cIit1WzJdLFwiZ1wiKSksbz1BKTp1WzNdIT09dm9pZCAwJiYobz1BKTpvPT09QT91WzBdPT09XCI+XCI/KG89aT8/QyxjPS0xKTp1WzFdPT09dm9pZCAwP2M9LTI6KGM9by5sYXN0SW5kZXgtdVsyXS5sZW5ndGgsZD11WzFdLG89dVszXT09PXZvaWQgMD9BOnVbM109PT0nXCInP3N0OmV0KTpvPT09c3R8fG89PT1ldD9vPUE6bz09PVh8fG89PT10dD9vPUM6KG89QSxpPXZvaWQgMCk7Y29uc3QgXz1vPT09QSYmclthKzFdLnN0YXJ0c1dpdGgoXCIvPlwiKT9cIiBcIjpcIlwiO24rPW89PT1DP2grdnQ6Yz49MD8ocy5wdXNoKGQpLGguc2xpY2UoMCxjKStvdCtoLnNsaWNlKGMpK2YrXyk6aCtmKyhjPT09LTI/YTpfKX1yZXR1cm5bbHQocixuKyhyW2VdfHxcIjw/PlwiKSsodD09PTI/XCI8L3N2Zz5cIjpcIlwiKSksc119O2NsYXNzIFJ7Y29uc3RydWN0b3Ioe3N0cmluZ3M6dCxfJGxpdFR5cGUkOmV9LHMpe2xldCBpO3RoaXMucGFydHM9W107bGV0IG49MCxvPTA7Y29uc3QgYT10Lmxlbmd0aC0xLGg9dGhpcy5wYXJ0cyxbZCx1XT13dCh0LGUpO2lmKHRoaXMuZWw9Ui5jcmVhdGVFbGVtZW50KGQscykseS5jdXJyZW50Tm9kZT10aGlzLmVsLmNvbnRlbnQsZT09PTIpe2NvbnN0IGM9dGhpcy5lbC5jb250ZW50LmZpcnN0Q2hpbGQ7Yy5yZXBsYWNlV2l0aCguLi5jLmNoaWxkTm9kZXMpfWZvcig7KGk9eS5uZXh0Tm9kZSgpKSE9PW51bGwmJmgubGVuZ3RoPGE7KXtpZihpLm5vZGVUeXBlPT09MSl7aWYoaS5oYXNBdHRyaWJ1dGVzKCkpZm9yKGNvbnN0IGMgb2YgaS5nZXRBdHRyaWJ1dGVOYW1lcygpKWlmKGMuZW5kc1dpdGgob3QpKXtjb25zdCBnPXVbbysrXSxfPWkuZ2V0QXR0cmlidXRlKGMpLnNwbGl0KGYpLEk9LyhbLj9AXSk/KC4qKS8uZXhlYyhnKTtoLnB1c2goe3R5cGU6MSxpbmRleDpuLG5hbWU6SVsyXSxzdHJpbmdzOl8sY3RvcjpJWzFdPT09XCIuXCI/UHQ6SVsxXT09PVwiP1wiP1R0OklbMV09PT1cIkBcIj9PdDprfSksaS5yZW1vdmVBdHRyaWJ1dGUoYyl9ZWxzZSBjLnN0YXJ0c1dpdGgoZikmJihoLnB1c2goe3R5cGU6NixpbmRleDpufSksaS5yZW1vdmVBdHRyaWJ1dGUoYykpO2lmKGN0LnRlc3QoaS50YWdOYW1lKSl7Y29uc3QgYz1pLnRleHRDb250ZW50LnNwbGl0KGYpLGc9Yy5sZW5ndGgtMTtpZihnPjApe2kudGV4dENvbnRlbnQ9Rz9HLmVtcHR5U2NyaXB0OlwiXCI7Zm9yKGxldCBfPTA7XzxnO18rKylpLmFwcGVuZChjW19dLE8oKSkseS5uZXh0Tm9kZSgpLGgucHVzaCh7dHlwZToyLGluZGV4Oisrbn0pO2kuYXBwZW5kKGNbZ10sTygpKX19fWVsc2UgaWYoaS5ub2RlVHlwZT09PTgpaWYoaS5kYXRhPT09aHQpaC5wdXNoKHt0eXBlOjIsaW5kZXg6bn0pO2Vsc2V7bGV0IGM9LTE7Zm9yKDsoYz1pLmRhdGEuaW5kZXhPZihmLGMrMSkpIT09LTE7KWgucHVzaCh7dHlwZTo3LGluZGV4Om59KSxjKz1mLmxlbmd0aC0xfW4rK319c3RhdGljIGNyZWF0ZUVsZW1lbnQodCxlKXtjb25zdCBzPVMuY3JlYXRlRWxlbWVudChcInRlbXBsYXRlXCIpO3JldHVybiBzLmlubmVySFRNTD10LHN9fWZ1bmN0aW9uIGIocix0LGU9cixzKXt2YXIgbyxhO2lmKHQ9PT1FKXJldHVybiB0O2xldCBpPXMhPT12b2lkIDA/KG89ZS5fJENvKT09bnVsbD92b2lkIDA6b1tzXTplLl8kQ2w7Y29uc3Qgbj1OKHQpP3ZvaWQgMDp0Ll8kbGl0RGlyZWN0aXZlJDtyZXR1cm4oaT09bnVsbD92b2lkIDA6aS5jb25zdHJ1Y3RvcikhPT1uJiYoKGE9aT09bnVsbD92b2lkIDA6aS5fJEFPKT09bnVsbHx8YS5jYWxsKGksITEpLG49PT12b2lkIDA/aT12b2lkIDA6KGk9bmV3IG4ociksaS5fJEFUKHIsZSxzKSkscyE9PXZvaWQgMD8oZS5fJENvPz8oZS5fJENvPVtdKSlbc109aTplLl8kQ2w9aSksaSE9PXZvaWQgMCYmKHQ9YihyLGkuXyRBUyhyLHQudmFsdWVzKSxpLHMpKSx0fWxldCBVdD1jbGFzc3tjb25zdHJ1Y3Rvcih0LGUpe3RoaXMuXyRBVj1bXSx0aGlzLl8kQU49dm9pZCAwLHRoaXMuXyRBRD10LHRoaXMuXyRBTT1lfWdldCBwYXJlbnROb2RlKCl7cmV0dXJuIHRoaXMuXyRBTS5wYXJlbnROb2RlfWdldCBfJEFVKCl7cmV0dXJuIHRoaXMuXyRBTS5fJEFVfXUodCl7Y29uc3R7ZWw6e2NvbnRlbnQ6ZX0scGFydHM6c309dGhpcy5fJEFELGk9KCh0PT1udWxsP3ZvaWQgMDp0LmNyZWF0aW9uU2NvcGUpPz9TKS5pbXBvcnROb2RlKGUsITApO3kuY3VycmVudE5vZGU9aTtsZXQgbj15Lm5leHROb2RlKCksbz0wLGE9MCxoPXNbMF07Zm9yKDtoIT09dm9pZCAwOyl7aWYobz09PWguaW5kZXgpe2xldCBkO2gudHlwZT09PTI/ZD1uZXcgTShuLG4ubmV4dFNpYmxpbmcsdGhpcyx0KTpoLnR5cGU9PT0xP2Q9bmV3IGguY3RvcihuLGgubmFtZSxoLnN0cmluZ3MsdGhpcyx0KTpoLnR5cGU9PT02JiYoZD1uZXcgTnQobix0aGlzLHQpKSx0aGlzLl8kQVYucHVzaChkKSxoPXNbKythXX1vIT09KGg9PW51bGw/dm9pZCAwOmguaW5kZXgpJiYobj15Lm5leHROb2RlKCksbysrKX1yZXR1cm4geS5jdXJyZW50Tm9kZT1TLGl9cCh0KXtsZXQgZT0wO2Zvcihjb25zdCBzIG9mIHRoaXMuXyRBVilzIT09dm9pZCAwJiYocy5zdHJpbmdzIT09dm9pZCAwPyhzLl8kQUkodCxzLGUpLGUrPXMuc3RyaW5ncy5sZW5ndGgtMik6cy5fJEFJKHRbZV0pKSxlKyt9fTtjbGFzcyBNe2dldCBfJEFVKCl7dmFyIHQ7cmV0dXJuKCh0PXRoaXMuXyRBTSk9PW51bGw/dm9pZCAwOnQuXyRBVSk/P3RoaXMuXyRDdn1jb25zdHJ1Y3Rvcih0LGUscyxpKXt0aGlzLnR5cGU9Mix0aGlzLl8kQUg9bCx0aGlzLl8kQU49dm9pZCAwLHRoaXMuXyRBQT10LHRoaXMuXyRBQj1lLHRoaXMuXyRBTT1zLHRoaXMub3B0aW9ucz1pLHRoaXMuXyRDdj0oaT09bnVsbD92b2lkIDA6aS5pc0Nvbm5lY3RlZCk/PyEwfWdldCBwYXJlbnROb2RlKCl7bGV0IHQ9dGhpcy5fJEFBLnBhcmVudE5vZGU7Y29uc3QgZT10aGlzLl8kQU07cmV0dXJuIGUhPT12b2lkIDAmJih0PT1udWxsP3ZvaWQgMDp0Lm5vZGVUeXBlKT09PTExJiYodD1lLnBhcmVudE5vZGUpLHR9Z2V0IHN0YXJ0Tm9kZSgpe3JldHVybiB0aGlzLl8kQUF9Z2V0IGVuZE5vZGUoKXtyZXR1cm4gdGhpcy5fJEFCfV8kQUkodCxlPXRoaXMpe3Q9Yih0aGlzLHQsZSksTih0KT90PT09bHx8dD09bnVsbHx8dD09PVwiXCI/KHRoaXMuXyRBSCE9PWwmJnRoaXMuXyRBUigpLHRoaXMuXyRBSD1sKTp0IT09dGhpcy5fJEFIJiZ0IT09RSYmdGhpcy5fKHQpOnQuXyRsaXRUeXBlJCE9PXZvaWQgMD90aGlzLmcodCk6dC5ub2RlVHlwZSE9PXZvaWQgMD90aGlzLiQodCk6RXQodCk/dGhpcy5UKHQpOnRoaXMuXyh0KX1rKHQpe3JldHVybiB0aGlzLl8kQUEucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodCx0aGlzLl8kQUIpfSQodCl7dGhpcy5fJEFIIT09dCYmKHRoaXMuXyRBUigpLHRoaXMuXyRBSD10aGlzLmsodCkpfV8odCl7dGhpcy5fJEFIIT09bCYmTih0aGlzLl8kQUgpP3RoaXMuXyRBQS5uZXh0U2libGluZy5kYXRhPXQ6dGhpcy4kKFMuY3JlYXRlVGV4dE5vZGUodCkpLHRoaXMuXyRBSD10fWcodCl7dmFyIG47Y29uc3R7dmFsdWVzOmUsXyRsaXRUeXBlJDpzfT10LGk9dHlwZW9mIHM9PVwibnVtYmVyXCI/dGhpcy5fJEFDKHQpOihzLmVsPT09dm9pZCAwJiYocy5lbD1SLmNyZWF0ZUVsZW1lbnQobHQocy5oLHMuaFswXSksdGhpcy5vcHRpb25zKSkscyk7aWYoKChuPXRoaXMuXyRBSCk9PW51bGw/dm9pZCAwOm4uXyRBRCk9PT1pKXRoaXMuXyRBSC5wKGUpO2Vsc2V7Y29uc3Qgbz1uZXcgVXQoaSx0aGlzKSxhPW8udSh0aGlzLm9wdGlvbnMpO28ucChlKSx0aGlzLiQoYSksdGhpcy5fJEFIPW99fV8kQUModCl7bGV0IGU9aXQuZ2V0KHQuc3RyaW5ncyk7cmV0dXJuIGU9PT12b2lkIDAmJml0LnNldCh0LnN0cmluZ3MsZT1uZXcgUih0KSksZX1UKHQpe2F0KHRoaXMuXyRBSCl8fCh0aGlzLl8kQUg9W10sdGhpcy5fJEFSKCkpO2NvbnN0IGU9dGhpcy5fJEFIO2xldCBzLGk9MDtmb3IoY29uc3QgbiBvZiB0KWk9PT1lLmxlbmd0aD9lLnB1c2gocz1uZXcgTSh0aGlzLmsoTygpKSx0aGlzLmsoTygpKSx0aGlzLHRoaXMub3B0aW9ucykpOnM9ZVtpXSxzLl8kQUkobiksaSsrO2k8ZS5sZW5ndGgmJih0aGlzLl8kQVIocyYmcy5fJEFCLm5leHRTaWJsaW5nLGkpLGUubGVuZ3RoPWkpfV8kQVIodD10aGlzLl8kQUEubmV4dFNpYmxpbmcsZSl7dmFyIHM7Zm9yKChzPXRoaXMuXyRBUCk9PW51bGw/dm9pZCAwOnMuY2FsbCh0aGlzLCExLCEwLGUpO3QmJnQhPT10aGlzLl8kQUI7KXtjb25zdCBpPXQubmV4dFNpYmxpbmc7dC5yZW1vdmUoKSx0PWl9fXNldENvbm5lY3RlZCh0KXt2YXIgZTt0aGlzLl8kQU09PT12b2lkIDAmJih0aGlzLl8kQ3Y9dCwoZT10aGlzLl8kQVApPT1udWxsfHxlLmNhbGwodGhpcyx0KSl9fWNsYXNzIGt7Z2V0IHRhZ05hbWUoKXtyZXR1cm4gdGhpcy5lbGVtZW50LnRhZ05hbWV9Z2V0IF8kQVUoKXtyZXR1cm4gdGhpcy5fJEFNLl8kQVV9Y29uc3RydWN0b3IodCxlLHMsaSxuKXt0aGlzLnR5cGU9MSx0aGlzLl8kQUg9bCx0aGlzLl8kQU49dm9pZCAwLHRoaXMuZWxlbWVudD10LHRoaXMubmFtZT1lLHRoaXMuXyRBTT1pLHRoaXMub3B0aW9ucz1uLHMubGVuZ3RoPjJ8fHNbMF0hPT1cIlwifHxzWzFdIT09XCJcIj8odGhpcy5fJEFIPUFycmF5KHMubGVuZ3RoLTEpLmZpbGwobmV3IFN0cmluZyksdGhpcy5zdHJpbmdzPXMpOnRoaXMuXyRBSD1sfV8kQUkodCxlPXRoaXMscyxpKXtjb25zdCBuPXRoaXMuc3RyaW5ncztsZXQgbz0hMTtpZihuPT09dm9pZCAwKXQ9Yih0aGlzLHQsZSwwKSxvPSFOKHQpfHx0IT09dGhpcy5fJEFIJiZ0IT09RSxvJiYodGhpcy5fJEFIPXQpO2Vsc2V7Y29uc3QgYT10O2xldCBoLGQ7Zm9yKHQ9blswXSxoPTA7aDxuLmxlbmd0aC0xO2grKylkPWIodGhpcyxhW3MraF0sZSxoKSxkPT09RSYmKGQ9dGhpcy5fJEFIW2hdKSxvfHwobz0hTihkKXx8ZCE9PXRoaXMuXyRBSFtoXSksZD09PWw/dD1sOnQhPT1sJiYodCs9KGQ/P1wiXCIpK25baCsxXSksdGhpcy5fJEFIW2hdPWR9byYmIWkmJnRoaXMuTyh0KX1PKHQpe3Q9PT1sP3RoaXMuZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUodGhpcy5uYW1lKTp0aGlzLmVsZW1lbnQuc2V0QXR0cmlidXRlKHRoaXMubmFtZSx0Pz9cIlwiKX19Y2xhc3MgUHQgZXh0ZW5kcyBre2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKSx0aGlzLnR5cGU9M31PKHQpe3RoaXMuZWxlbWVudFt0aGlzLm5hbWVdPXQ9PT1sP3ZvaWQgMDp0fX1jbGFzcyBUdCBleHRlbmRzIGt7Y29uc3RydWN0b3IoKXtzdXBlciguLi5hcmd1bWVudHMpLHRoaXMudHlwZT00fU8odCl7dGhpcy5lbGVtZW50LnRvZ2dsZUF0dHJpYnV0ZSh0aGlzLm5hbWUsISF0JiZ0IT09bCl9fWNsYXNzIE90IGV4dGVuZHMga3tjb25zdHJ1Y3Rvcih0LGUscyxpLG4pe3N1cGVyKHQsZSxzLGksbiksdGhpcy50eXBlPTV9XyRBSSh0LGU9dGhpcyl7aWYoKHQ9Yih0aGlzLHQsZSwwKT8/bCk9PT1FKXJldHVybjtjb25zdCBzPXRoaXMuXyRBSCxpPXQ9PT1sJiZzIT09bHx8dC5jYXB0dXJlIT09cy5jYXB0dXJlfHx0Lm9uY2UhPT1zLm9uY2V8fHQucGFzc2l2ZSE9PXMucGFzc2l2ZSxuPXQhPT1sJiYocz09PWx8fGkpO2kmJnRoaXMuZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKHRoaXMubmFtZSx0aGlzLHMpLG4mJnRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKHRoaXMubmFtZSx0aGlzLHQpLHRoaXMuXyRBSD10fWhhbmRsZUV2ZW50KHQpe3ZhciBlO3R5cGVvZiB0aGlzLl8kQUg9PVwiZnVuY3Rpb25cIj90aGlzLl8kQUguY2FsbCgoKGU9dGhpcy5vcHRpb25zKT09bnVsbD92b2lkIDA6ZS5ob3N0KT8/dGhpcy5lbGVtZW50LHQpOnRoaXMuXyRBSC5oYW5kbGVFdmVudCh0KX19Y2xhc3MgTnR7Y29uc3RydWN0b3IodCxlLHMpe3RoaXMuZWxlbWVudD10LHRoaXMudHlwZT02LHRoaXMuXyRBTj12b2lkIDAsdGhpcy5fJEFNPWUsdGhpcy5vcHRpb25zPXN9Z2V0IF8kQVUoKXtyZXR1cm4gdGhpcy5fJEFNLl8kQVV9XyRBSSh0KXtiKHRoaXMsdCl9fWNvbnN0IHo9VS5saXRIdG1sUG9seWZpbGxTdXBwb3J0O3o9PW51bGx8fHooUixNKSwoVS5saXRIdG1sVmVyc2lvbnM/PyhVLmxpdEh0bWxWZXJzaW9ucz1bXSkpLnB1c2goXCIzLjEuMFwiKTtjb25zdCBSdD0ocix0LGUpPT57Y29uc3Qgcz0oZT09bnVsbD92b2lkIDA6ZS5yZW5kZXJCZWZvcmUpPz90O2xldCBpPXMuXyRsaXRQYXJ0JDtpZihpPT09dm9pZCAwKXtjb25zdCBuPShlPT1udWxsP3ZvaWQgMDplLnJlbmRlckJlZm9yZSk/P251bGw7cy5fJGxpdFBhcnQkPWk9bmV3IE0odC5pbnNlcnRCZWZvcmUoTygpLG4pLG4sdm9pZCAwLGU/P3t9KX1yZXR1cm4gaS5fJEFJKHIpLGl9Oy8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBMTENcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBCU0QtMy1DbGF1c2VcbiAqL2xldCBQPWNsYXNzIGV4dGVuZHMgdntjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy5yZW5kZXJPcHRpb25zPXtob3N0OnRoaXN9LHRoaXMuXyREbz12b2lkIDB9Y3JlYXRlUmVuZGVyUm9vdCgpe3ZhciBlO2NvbnN0IHQ9c3VwZXIuY3JlYXRlUmVuZGVyUm9vdCgpO3JldHVybihlPXRoaXMucmVuZGVyT3B0aW9ucykucmVuZGVyQmVmb3JlPz8oZS5yZW5kZXJCZWZvcmU9dC5maXJzdENoaWxkKSx0fXVwZGF0ZSh0KXtjb25zdCBlPXRoaXMucmVuZGVyKCk7dGhpcy5oYXNVcGRhdGVkfHwodGhpcy5yZW5kZXJPcHRpb25zLmlzQ29ubmVjdGVkPXRoaXMuaXNDb25uZWN0ZWQpLHN1cGVyLnVwZGF0ZSh0KSx0aGlzLl8kRG89UnQoZSx0aGlzLnJlbmRlclJvb3QsdGhpcy5yZW5kZXJPcHRpb25zKX1jb25uZWN0ZWRDYWxsYmFjaygpe3ZhciB0O3N1cGVyLmNvbm5lY3RlZENhbGxiYWNrKCksKHQ9dGhpcy5fJERvKT09bnVsbHx8dC5zZXRDb25uZWN0ZWQoITApfWRpc2Nvbm5lY3RlZENhbGxiYWNrKCl7dmFyIHQ7c3VwZXIuZGlzY29ubmVjdGVkQ2FsbGJhY2soKSwodD10aGlzLl8kRG8pPT1udWxsfHx0LnNldENvbm5lY3RlZCghMSl9cmVuZGVyKCl7cmV0dXJuIEV9fTt2YXIgcnQ7UC5fJGxpdEVsZW1lbnQkPSEwLFAuZmluYWxpemVkPSEwLChydD1nbG9iYWxUaGlzLmxpdEVsZW1lbnRIeWRyYXRlU3VwcG9ydCk9PW51bGx8fHJ0LmNhbGwoZ2xvYmFsVGhpcyx7TGl0RWxlbWVudDpQfSk7Y29uc3QgQj1nbG9iYWxUaGlzLmxpdEVsZW1lbnRQb2x5ZmlsbFN1cHBvcnQ7Qj09bnVsbHx8Qih7TGl0RWxlbWVudDpQfSk7KGdsb2JhbFRoaXMubGl0RWxlbWVudFZlcnNpb25zPz8oZ2xvYmFsVGhpcy5saXRFbGVtZW50VmVyc2lvbnM9W10pKS5wdXNoKFwiNC4wLjJcIik7LyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQ1xuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEJTRC0zLUNsYXVzZVxuICovY29uc3QgTXQ9cj0+KHQsZSk9PntlIT09dm9pZCAwP2UuYWRkSW5pdGlhbGl6ZXIoKCk9PntjdXN0b21FbGVtZW50cy5kZWZpbmUocix0KX0pOmN1c3RvbUVsZW1lbnRzLmRlZmluZShyLHQpfTsvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQlNELTMtQ2xhdXNlXG4gKi9jb25zdCBJdD17YXR0cmlidXRlOiEwLHR5cGU6U3RyaW5nLGNvbnZlcnRlcjpILHJlZmxlY3Q6ITEsaGFzQ2hhbmdlZDpLfSx4dD0ocj1JdCx0LGUpPT57Y29uc3R7a2luZDpzLG1ldGFkYXRhOml9PWU7bGV0IG49Z2xvYmFsVGhpcy5saXRQcm9wZXJ0eU1ldGFkYXRhLmdldChpKTtpZihuPT09dm9pZCAwJiZnbG9iYWxUaGlzLmxpdFByb3BlcnR5TWV0YWRhdGEuc2V0KGksbj1uZXcgTWFwKSxuLnNldChlLm5hbWUscikscz09PVwiYWNjZXNzb3JcIil7Y29uc3R7bmFtZTpvfT1lO3JldHVybntzZXQoYSl7Y29uc3QgaD10LmdldC5jYWxsKHRoaXMpO3Quc2V0LmNhbGwodGhpcyxhKSx0aGlzLnJlcXVlc3RVcGRhdGUobyxoLHIpfSxpbml0KGEpe3JldHVybiBhIT09dm9pZCAwJiZ0aGlzLkMobyx2b2lkIDAsciksYX19fWlmKHM9PT1cInNldHRlclwiKXtjb25zdHtuYW1lOm99PWU7cmV0dXJuIGZ1bmN0aW9uKGEpe2NvbnN0IGg9dGhpc1tvXTt0LmNhbGwodGhpcyxhKSx0aGlzLnJlcXVlc3RVcGRhdGUobyxoLHIpfX10aHJvdyBFcnJvcihcIlVuc3VwcG9ydGVkIGRlY29yYXRvciBsb2NhdGlvbjogXCIrcyl9O2Z1bmN0aW9uICQocil7cmV0dXJuKHQsZSk9PnR5cGVvZiBlPT1cIm9iamVjdFwiP3h0KHIsdCxlKTooKHMsaSxuKT0+e2NvbnN0IG89aS5oYXNPd25Qcm9wZXJ0eShuKTtyZXR1cm4gaS5jb25zdHJ1Y3Rvci5jcmVhdGVQcm9wZXJ0eShuLG8/ey4uLnMsd3JhcHBlZDohMH06cyksbz9PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGksbik6dm9pZCAwfSkocix0LGUpfS8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTENcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBCU0QtMy1DbGF1c2VcbiAqL2NvbnN0IEh0PXI9PnIuc3RyaW5ncz09PXZvaWQgMDsvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQlNELTMtQ2xhdXNlXG4gKi9jb25zdCBHdD17QVRUUklCVVRFOjEsQ0hJTEQ6MixQUk9QRVJUWTozLEJPT0xFQU5fQVRUUklCVVRFOjQsRVZFTlQ6NSxFTEVNRU5UOjZ9LEx0PXI9PiguLi50KT0+KHtfJGxpdERpcmVjdGl2ZSQ6cix2YWx1ZXM6dH0pO2xldCBrdD1jbGFzc3tjb25zdHJ1Y3Rvcih0KXt9Z2V0IF8kQVUoKXtyZXR1cm4gdGhpcy5fJEFNLl8kQVV9XyRBVCh0LGUscyl7dGhpcy5fJEN0PXQsdGhpcy5fJEFNPWUsdGhpcy5fJENpPXN9XyRBUyh0LGUpe3JldHVybiB0aGlzLnVwZGF0ZSh0LGUpfXVwZGF0ZSh0LGUpe3JldHVybiB0aGlzLnJlbmRlciguLi5lKX19Oy8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBMTENcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBCU0QtMy1DbGF1c2VcbiAqL2NvbnN0IFQ9KHIsdCk9Pnt2YXIgcztjb25zdCBlPXIuXyRBTjtpZihlPT09dm9pZCAwKXJldHVybiExO2Zvcihjb25zdCBpIG9mIGUpKHM9aS5fJEFPKT09bnVsbHx8cy5jYWxsKGksdCwhMSksVChpLHQpO3JldHVybiEwfSxMPXI9PntsZXQgdCxlO2Rve2lmKCh0PXIuXyRBTSk9PT12b2lkIDApYnJlYWs7ZT10Ll8kQU4sZS5kZWxldGUocikscj10fXdoaWxlKChlPT1udWxsP3ZvaWQgMDplLnNpemUpPT09MCl9LGR0PXI9Pntmb3IobGV0IHQ7dD1yLl8kQU07cj10KXtsZXQgZT10Ll8kQU47aWYoZT09PXZvaWQgMCl0Ll8kQU49ZT1uZXcgU2V0O2Vsc2UgaWYoZS5oYXMocikpYnJlYWs7ZS5hZGQociksenQodCl9fTtmdW5jdGlvbiBXdChyKXt0aGlzLl8kQU4hPT12b2lkIDA/KEwodGhpcyksdGhpcy5fJEFNPXIsZHQodGhpcykpOnRoaXMuXyRBTT1yfWZ1bmN0aW9uIER0KHIsdD0hMSxlPTApe2NvbnN0IHM9dGhpcy5fJEFILGk9dGhpcy5fJEFOO2lmKGkhPT12b2lkIDAmJmkuc2l6ZSE9PTApaWYodClpZihBcnJheS5pc0FycmF5KHMpKWZvcihsZXQgbj1lO248cy5sZW5ndGg7bisrKVQoc1tuXSwhMSksTChzW25dKTtlbHNlIHMhPW51bGwmJihUKHMsITEpLEwocykpO2Vsc2UgVCh0aGlzLHIpfWNvbnN0IHp0PXI9PntyLnR5cGU9PUd0LkNISUxEJiYoci5fJEFQPz8oci5fJEFQPUR0KSxyLl8kQVE/PyhyLl8kQVE9V3QpKX07Y2xhc3MgQnQgZXh0ZW5kcyBrdHtjb25zdHJ1Y3Rvcigpe3N1cGVyKC4uLmFyZ3VtZW50cyksdGhpcy5fJEFOPXZvaWQgMH1fJEFUKHQsZSxzKXtzdXBlci5fJEFUKHQsZSxzKSxkdCh0aGlzKSx0aGlzLmlzQ29ubmVjdGVkPXQuXyRBVX1fJEFPKHQsZT0hMCl7dmFyIHMsaTt0IT09dGhpcy5pc0Nvbm5lY3RlZCYmKHRoaXMuaXNDb25uZWN0ZWQ9dCx0PyhzPXRoaXMucmVjb25uZWN0ZWQpPT1udWxsfHxzLmNhbGwodGhpcyk6KGk9dGhpcy5kaXNjb25uZWN0ZWQpPT1udWxsfHxpLmNhbGwodGhpcykpLGUmJihUKHRoaXMsdCksTCh0aGlzKSl9c2V0VmFsdWUodCl7aWYoSHQodGhpcy5fJEN0KSl0aGlzLl8kQ3QuXyRBSSh0LHRoaXMpO2Vsc2V7Y29uc3QgZT1bLi4udGhpcy5fJEN0Ll8kQUhdO2VbdGhpcy5fJENpXT10LHRoaXMuXyRDdC5fJEFJKGUsdGhpcywwKX19ZGlzY29ubmVjdGVkKCl7fXJlY29ubmVjdGVkKCl7fX0vKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQlNELTMtQ2xhdXNlXG4gKi9jb25zdCBqdD0oKT0+bmV3IFZ0O2NsYXNzIFZ0e31jb25zdCBqPW5ldyBXZWFrTWFwLHF0PUx0KGNsYXNzIGV4dGVuZHMgQnR7cmVuZGVyKHIpe3JldHVybiBsfXVwZGF0ZShyLFt0XSl7dmFyIHM7Y29uc3QgZT10IT09dGhpcy5HO3JldHVybiBlJiZ0aGlzLkchPT12b2lkIDAmJnRoaXMub3Qodm9pZCAwKSwoZXx8dGhpcy5ydCE9PXRoaXMubHQpJiYodGhpcy5HPXQsdGhpcy5jdD0ocz1yLm9wdGlvbnMpPT1udWxsP3ZvaWQgMDpzLmhvc3QsdGhpcy5vdCh0aGlzLmx0PXIuZWxlbWVudCkpLGx9b3Qocil7aWYodHlwZW9mIHRoaXMuRz09XCJmdW5jdGlvblwiKXtjb25zdCB0PXRoaXMuY3Q/P2dsb2JhbFRoaXM7bGV0IGU9ai5nZXQodCk7ZT09PXZvaWQgMCYmKGU9bmV3IFdlYWtNYXAsai5zZXQodCxlKSksZS5nZXQodGhpcy5HKSE9PXZvaWQgMCYmdGhpcy5HLmNhbGwodGhpcy5jdCx2b2lkIDApLGUuc2V0KHRoaXMuRyxyKSxyIT09dm9pZCAwJiZ0aGlzLkcuY2FsbCh0aGlzLmN0LHIpfWVsc2UgdGhpcy5HLnZhbHVlPXJ9Z2V0IHJ0KCl7dmFyIHIsdDtyZXR1cm4gdHlwZW9mIHRoaXMuRz09XCJmdW5jdGlvblwiPyhyPWouZ2V0KHRoaXMuY3Q/P2dsb2JhbFRoaXMpKT09bnVsbD92b2lkIDA6ci5nZXQodGhpcy5HKToodD10aGlzLkcpPT1udWxsP3ZvaWQgMDp0LnZhbHVlfWRpc2Nvbm5lY3RlZCgpe3RoaXMucnQ9PT10aGlzLmx0JiZ0aGlzLm90KHZvaWQgMCl9cmVjb25uZWN0ZWQoKXt0aGlzLm90KHRoaXMubHQpfX0pO3ZhciBLdD1PYmplY3QuZGVmaW5lUHJvcGVydHksWXQ9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcixwPShyLHQsZSxzKT0+e2Zvcih2YXIgaT1zPjE/dm9pZCAwOnM/WXQodCxlKTp0LG49ci5sZW5ndGgtMSxvO24+PTA7bi0tKShvPXJbbl0pJiYoaT0ocz9vKHQsZSxpKTpvKGkpKXx8aSk7cmV0dXJuIHMmJmkmJkt0KHQsZSxpKSxpfTtmdW5jdGlvbiBKdChyKXtyZXR1cm4gY3VzdG9tRWxlbWVudHMuZ2V0KHIpP3Q9PnQ6TXQocil9ZXhwb3J0cy5HaXNjdXNXaWRnZXQ9Y2xhc3MgZXh0ZW5kcyBQe2NvbnN0cnVjdG9yKCl7c3VwZXIoKSx0aGlzLkdJU0NVU19TRVNTSU9OX0tFWT1cImdpc2N1cy1zZXNzaW9uXCIsdGhpcy5HSVNDVVNfREVGQVVMVF9IT1NUPVwiaHR0cHM6Ly9naXNjdXMuYXBwXCIsdGhpcy5FUlJPUl9TVUdHRVNUSU9OPVwiUGxlYXNlIGNvbnNpZGVyIHJlcG9ydGluZyB0aGlzIGVycm9yIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9naXNjdXMvZ2lzY3VzL2lzc3Vlcy9uZXcuXCIsdGhpcy5fX3Nlc3Npb249XCJcIix0aGlzLl9pZnJhbWVSZWY9anQoKSx0aGlzLm1lc3NhZ2VFdmVudEhhbmRsZXI9dGhpcy5oYW5kbGVNZXNzYWdlRXZlbnQuYmluZCh0aGlzKSx0aGlzLmhhc0xvYWRlZD0hMSx0aGlzLmhvc3Q9dGhpcy5HSVNDVVNfREVGQVVMVF9IT1NULHRoaXMuc3RyaWN0PVwiMFwiLHRoaXMucmVhY3Rpb25zRW5hYmxlZD1cIjFcIix0aGlzLmVtaXRNZXRhZGF0YT1cIjBcIix0aGlzLmlucHV0UG9zaXRpb249XCJib3R0b21cIix0aGlzLnRoZW1lPVwibGlnaHRcIix0aGlzLmxhbmc9XCJlblwiLHRoaXMubG9hZGluZz1cImVhZ2VyXCIsdGhpcy5zZXR1cFNlc3Npb24oKSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIix0aGlzLm1lc3NhZ2VFdmVudEhhbmRsZXIpfWdldCBpZnJhbWVSZWYoKXt2YXIgdDtyZXR1cm4odD10aGlzLl9pZnJhbWVSZWYpPT1udWxsP3ZvaWQgMDp0LnZhbHVlfWdldCBfaG9zdCgpe3RyeXtyZXR1cm4gbmV3IFVSTCh0aGlzLmhvc3QpLHRoaXMuaG9zdH1jYXRjaHtyZXR1cm4gdGhpcy5HSVNDVVNfREVGQVVMVF9IT1NUfX1kaXNjb25uZWN0ZWRDYWxsYmFjaygpe3N1cGVyLmRpc2Nvbm5lY3RlZENhbGxiYWNrKCksd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsdGhpcy5tZXNzYWdlRXZlbnRIYW5kbGVyKX1fZm9ybWF0RXJyb3IodCl7cmV0dXJuYFtnaXNjdXNdIEFuIGVycm9yIG9jY3VycmVkLiBFcnJvciBtZXNzYWdlOiBcIiR7dH1cIi5gfXNldHVwU2Vzc2lvbigpe2NvbnN0IHQ9bG9jYXRpb24uaHJlZixlPW5ldyBVUkwodCkscz1sb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLkdJU0NVU19TRVNTSU9OX0tFWSksaT1lLnNlYXJjaFBhcmFtcy5nZXQoXCJnaXNjdXNcIik/P1wiXCI7aWYodGhpcy5fX3Nlc3Npb249XCJcIixpKXtsb2NhbFN0b3JhZ2Uuc2V0SXRlbSh0aGlzLkdJU0NVU19TRVNTSU9OX0tFWSxKU09OLnN0cmluZ2lmeShpKSksdGhpcy5fX3Nlc3Npb249aSxlLnNlYXJjaFBhcmFtcy5kZWxldGUoXCJnaXNjdXNcIiksZS5oYXNoPVwiXCIsaGlzdG9yeS5yZXBsYWNlU3RhdGUodm9pZCAwLGRvY3VtZW50LnRpdGxlLGUudG9TdHJpbmcoKSk7cmV0dXJufWlmKHMpdHJ5e3RoaXMuX19zZXNzaW9uPUpTT04ucGFyc2Uocyl9Y2F0Y2gobil7bG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0odGhpcy5HSVNDVVNfU0VTU0lPTl9LRVkpLGNvbnNvbGUud2FybihgJHt0aGlzLl9mb3JtYXRFcnJvcihuPT1udWxsP3ZvaWQgMDpuLm1lc3NhZ2UpfSBTZXNzaW9uIGhhcyBiZWVuIGNsZWFyZWQuYCl9fXNpZ25PdXQoKXtsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSh0aGlzLkdJU0NVU19TRVNTSU9OX0tFWSksdGhpcy5fX3Nlc3Npb249XCJcIix0aGlzLnVwZGF0ZShuZXcgTWFwKX1oYW5kbGVNZXNzYWdlRXZlbnQodCl7aWYodC5vcmlnaW4hPT10aGlzLl9ob3N0KXJldHVybjtjb25zdHtkYXRhOmV9PXQ7aWYoISh0eXBlb2YgZT09XCJvYmplY3RcIiYmZS5naXNjdXMpKXJldHVybjtpZih0aGlzLmlmcmFtZVJlZiYmZS5naXNjdXMucmVzaXplSGVpZ2h0JiYodGhpcy5pZnJhbWVSZWYuc3R5bGUuaGVpZ2h0PWAke2UuZ2lzY3VzLnJlc2l6ZUhlaWdodH1weGApLGUuZ2lzY3VzLnNpZ25PdXQpe2NvbnNvbGUuaW5mbyhcIltnaXNjdXNdIFVzZXIgaGFzIGxvZ2dlZCBvdXQuIFNlc3Npb24gaGFzIGJlZW4gY2xlYXJlZC5cIiksdGhpcy5zaWduT3V0KCk7cmV0dXJufWlmKCFlLmdpc2N1cy5lcnJvcilyZXR1cm47Y29uc3Qgcz1lLmdpc2N1cy5lcnJvcjtpZihzLmluY2x1ZGVzKFwiQmFkIGNyZWRlbnRpYWxzXCIpfHxzLmluY2x1ZGVzKFwiSW52YWxpZCBzdGF0ZSB2YWx1ZVwiKXx8cy5pbmNsdWRlcyhcIlN0YXRlIGhhcyBleHBpcmVkXCIpKXtpZihsb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0aGlzLkdJU0NVU19TRVNTSU9OX0tFWSkhPT1udWxsKXtjb25zb2xlLndhcm4oYCR7dGhpcy5fZm9ybWF0RXJyb3Iocyl9IFNlc3Npb24gaGFzIGJlZW4gY2xlYXJlZC5gKSx0aGlzLnNpZ25PdXQoKTtyZXR1cm59Y29uc29sZS5lcnJvcihgJHt0aGlzLl9mb3JtYXRFcnJvcihzKX0gTm8gc2Vzc2lvbiBpcyBzdG9yZWQgaW5pdGlhbGx5LiAke3RoaXMuRVJST1JfU1VHR0VTVElPTn1gKX1pZihzLmluY2x1ZGVzKFwiRGlzY3Vzc2lvbiBub3QgZm91bmRcIikpe2NvbnNvbGUud2FybihgW2dpc2N1c10gJHtzfS4gQSBuZXcgZGlzY3Vzc2lvbiB3aWxsIGJlIGNyZWF0ZWQgaWYgYSBjb21tZW50L3JlYWN0aW9uIGlzIHN1Ym1pdHRlZC5gKTtyZXR1cm59Y29uc29sZS5lcnJvcihgJHt0aGlzLl9mb3JtYXRFcnJvcihzKX0gJHt0aGlzLkVSUk9SX1NVR0dFU1RJT059YCl9c2VuZE1lc3NhZ2UodCl7dmFyIGU7ISgoZT10aGlzLmlmcmFtZVJlZikhPW51bGwmJmUuY29udGVudFdpbmRvdyl8fCF0aGlzLmhhc0xvYWRlZHx8dGhpcy5pZnJhbWVSZWYuY29udGVudFdpbmRvdy5wb3N0TWVzc2FnZSh7Z2lzY3VzOnR9LHRoaXMuX2hvc3QpfXVwZGF0ZUNvbmZpZygpe2NvbnN0IHQ9e3NldENvbmZpZzp7cmVwbzp0aGlzLnJlcG8scmVwb0lkOnRoaXMucmVwb0lkLGNhdGVnb3J5OnRoaXMuY2F0ZWdvcnksY2F0ZWdvcnlJZDp0aGlzLmNhdGVnb3J5SWQsdGVybTp0aGlzLmdldFRlcm0oKSxudW1iZXI6K3RoaXMuZ2V0TnVtYmVyKCksc3RyaWN0OnRoaXMuc3RyaWN0PT09XCIxXCIscmVhY3Rpb25zRW5hYmxlZDp0aGlzLnJlYWN0aW9uc0VuYWJsZWQ9PT1cIjFcIixlbWl0TWV0YWRhdGE6dGhpcy5lbWl0TWV0YWRhdGE9PT1cIjFcIixpbnB1dFBvc2l0aW9uOnRoaXMuaW5wdXRQb3NpdGlvbix0aGVtZTp0aGlzLnRoZW1lLGxhbmc6dGhpcy5sYW5nfX07dGhpcy5zZW5kTWVzc2FnZSh0KX1maXJzdFVwZGF0ZWQoKXt2YXIgdDsodD10aGlzLmlmcmFtZVJlZik9PW51bGx8fHQuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIiwoKT0+e3ZhciBlOyhlPXRoaXMuaWZyYW1lUmVmKT09bnVsbHx8ZS5jbGFzc0xpc3QucmVtb3ZlKFwibG9hZGluZ1wiKSx0aGlzLmhhc0xvYWRlZD0hMCx0aGlzLnVwZGF0ZUNvbmZpZygpfSl9cmVxdWVzdFVwZGF0ZSh0LGUscyl7aWYoIXRoaXMuaGFzVXBkYXRlZHx8dD09PVwiaG9zdFwiKXtzdXBlci5yZXF1ZXN0VXBkYXRlKHQsZSxzKTtyZXR1cm59dGhpcy51cGRhdGVDb25maWcoKX1nZXRNZXRhQ29udGVudCh0LGU9ITEpe2NvbnN0IHM9ZT9gbWV0YVtwcm9wZXJ0eT0nb2c6JHt0fSddLGA6XCJcIixpPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocytgbWV0YVtuYW1lPScke3R9J11gKTtyZXR1cm4gaT9pLmNvbnRlbnQ6XCJcIn1fZ2V0Q2xlYW5lZFVybCgpe2NvbnN0IHQ9bmV3IFVSTChsb2NhdGlvbi5ocmVmKTtyZXR1cm4gdC5zZWFyY2hQYXJhbXMuZGVsZXRlKFwiZ2lzY3VzXCIpLHQuaGFzaD1cIlwiLHR9Z2V0VGVybSgpe3N3aXRjaCh0aGlzLm1hcHBpbmcpe2Nhc2VcInVybFwiOnJldHVybiB0aGlzLl9nZXRDbGVhbmVkVXJsKCkudG9TdHJpbmcoKTtjYXNlXCJ0aXRsZVwiOnJldHVybiBkb2N1bWVudC50aXRsZTtjYXNlXCJvZzp0aXRsZVwiOnJldHVybiB0aGlzLmdldE1ldGFDb250ZW50KFwidGl0bGVcIiwhMCk7Y2FzZVwic3BlY2lmaWNcIjpyZXR1cm4gdGhpcy50ZXJtPz9cIlwiO2Nhc2VcIm51bWJlclwiOnJldHVyblwiXCI7Y2FzZVwicGF0aG5hbWVcIjpkZWZhdWx0OnJldHVybiBsb2NhdGlvbi5wYXRobmFtZS5sZW5ndGg8Mj9cImluZGV4XCI6bG9jYXRpb24ucGF0aG5hbWUuc3Vic3RyaW5nKDEpLnJlcGxhY2UoL1xcLlxcdyskLyxcIlwiKX19Z2V0TnVtYmVyKCl7cmV0dXJuIHRoaXMubWFwcGluZz09PVwibnVtYmVyXCI/dGhpcy50ZXJtPz9cIlwiOlwiXCJ9Z2V0SWZyYW1lU3JjKCl7Y29uc3QgdD10aGlzLl9nZXRDbGVhbmVkVXJsKCkudG9TdHJpbmcoKSxlPWAke3R9JHt0aGlzLmlkP1wiI1wiK3RoaXMuaWQ6XCJcIn1gLHM9dGhpcy5nZXRNZXRhQ29udGVudChcImRlc2NyaXB0aW9uXCIsITApLGk9dGhpcy5nZXRNZXRhQ29udGVudChcImdpc2N1czpiYWNrbGlua1wiKXx8dCxuPXtvcmlnaW46ZSxzZXNzaW9uOnRoaXMuX19zZXNzaW9uLHJlcG86dGhpcy5yZXBvLHJlcG9JZDp0aGlzLnJlcG9JZD8/XCJcIixjYXRlZ29yeTp0aGlzLmNhdGVnb3J5Pz9cIlwiLGNhdGVnb3J5SWQ6dGhpcy5jYXRlZ29yeUlkPz9cIlwiLHRlcm06dGhpcy5nZXRUZXJtKCksbnVtYmVyOnRoaXMuZ2V0TnVtYmVyKCksc3RyaWN0OnRoaXMuc3RyaWN0LHJlYWN0aW9uc0VuYWJsZWQ6dGhpcy5yZWFjdGlvbnNFbmFibGVkLGVtaXRNZXRhZGF0YTp0aGlzLmVtaXRNZXRhZGF0YSxpbnB1dFBvc2l0aW9uOnRoaXMuaW5wdXRQb3NpdGlvbix0aGVtZTp0aGlzLnRoZW1lLGRlc2NyaXB0aW9uOnMsYmFja0xpbms6aX0sbz10aGlzLl9ob3N0LGE9dGhpcy5sYW5nP2AvJHt0aGlzLmxhbmd9YDpcIlwiLGg9bmV3IFVSTFNlYXJjaFBhcmFtcyhuKTtyZXR1cm5gJHtvfSR7YX0vd2lkZ2V0PyR7aC50b1N0cmluZygpfWB9cmVuZGVyKCl7cmV0dXJuIEN0YFxuICAgICAgPGlmcmFtZVxuICAgICAgICB0aXRsZT1cIkNvbW1lbnRzXCJcbiAgICAgICAgc2Nyb2xsaW5nPVwibm9cIlxuICAgICAgICBjbGFzcz1cImxvYWRpbmdcIlxuICAgICAgICAke3F0KHRoaXMuX2lmcmFtZVJlZil9XG4gICAgICAgIHNyYz0ke3RoaXMuZ2V0SWZyYW1lU3JjKCl9XG4gICAgICAgIGxvYWRpbmc9JHt0aGlzLmxvYWRpbmd9XG4gICAgICAgIGFsbG93PVwiY2xpcGJvYXJkLXdyaXRlXCJcbiAgICAgICAgcGFydD1cImlmcmFtZVwiXG4gICAgICA+PC9pZnJhbWU+XG4gICAgYH19O2V4cG9ydHMuR2lzY3VzV2lkZ2V0LnN0eWxlcz1wdGBcbiAgICA6aG9zdCxcbiAgICBpZnJhbWUge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBtaW4taGVpZ2h0OiAxNTBweDtcbiAgICAgIGNvbG9yLXNjaGVtZTogbGlnaHQgZGFyaztcbiAgICB9XG5cbiAgICBpZnJhbWUubG9hZGluZyB7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgIH1cbiAgYDtwKFskKHtyZWZsZWN0OiEwfSldLGV4cG9ydHMuR2lzY3VzV2lkZ2V0LnByb3RvdHlwZSxcImhvc3RcIiwyKTtwKFskKHtyZWZsZWN0OiEwfSldLGV4cG9ydHMuR2lzY3VzV2lkZ2V0LnByb3RvdHlwZSxcInJlcG9cIiwyKTtwKFskKHtyZWZsZWN0OiEwfSldLGV4cG9ydHMuR2lzY3VzV2lkZ2V0LnByb3RvdHlwZSxcInJlcG9JZFwiLDIpO3AoWyQoe3JlZmxlY3Q6ITB9KV0sZXhwb3J0cy5HaXNjdXNXaWRnZXQucHJvdG90eXBlLFwiY2F0ZWdvcnlcIiwyKTtwKFskKHtyZWZsZWN0OiEwfSldLGV4cG9ydHMuR2lzY3VzV2lkZ2V0LnByb3RvdHlwZSxcImNhdGVnb3J5SWRcIiwyKTtwKFskKHtyZWZsZWN0OiEwfSldLGV4cG9ydHMuR2lzY3VzV2lkZ2V0LnByb3RvdHlwZSxcIm1hcHBpbmdcIiwyKTtwKFskKHtyZWZsZWN0OiEwfSldLGV4cG9ydHMuR2lzY3VzV2lkZ2V0LnByb3RvdHlwZSxcInRlcm1cIiwyKTtwKFskKHtyZWZsZWN0OiEwfSldLGV4cG9ydHMuR2lzY3VzV2lkZ2V0LnByb3RvdHlwZSxcInN0cmljdFwiLDIpO3AoWyQoe3JlZmxlY3Q6ITB9KV0sZXhwb3J0cy5HaXNjdXNXaWRnZXQucHJvdG90eXBlLFwicmVhY3Rpb25zRW5hYmxlZFwiLDIpO3AoWyQoe3JlZmxlY3Q6ITB9KV0sZXhwb3J0cy5HaXNjdXNXaWRnZXQucHJvdG90eXBlLFwiZW1pdE1ldGFkYXRhXCIsMik7cChbJCh7cmVmbGVjdDohMH0pXSxleHBvcnRzLkdpc2N1c1dpZGdldC5wcm90b3R5cGUsXCJpbnB1dFBvc2l0aW9uXCIsMik7cChbJCh7cmVmbGVjdDohMH0pXSxleHBvcnRzLkdpc2N1c1dpZGdldC5wcm90b3R5cGUsXCJ0aGVtZVwiLDIpO3AoWyQoe3JlZmxlY3Q6ITB9KV0sZXhwb3J0cy5HaXNjdXNXaWRnZXQucHJvdG90eXBlLFwibGFuZ1wiLDIpO3AoWyQoe3JlZmxlY3Q6ITB9KV0sZXhwb3J0cy5HaXNjdXNXaWRnZXQucHJvdG90eXBlLFwibG9hZGluZ1wiLDIpO2V4cG9ydHMuR2lzY3VzV2lkZ2V0PXAoW0p0KFwiZ2lzY3VzLXdpZGdldFwiKV0sZXhwb3J0cy5HaXNjdXNXaWRnZXQpO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ4IiwiZ2xvYmFsVGhpcyIsIlYiLCJTaGFkb3dSb290IiwiU2hhZHlDU1MiLCJuYXRpdmVTaGFkb3ciLCJEb2N1bWVudCIsInByb3RvdHlwZSIsIkNTU1N0eWxlU2hlZXQiLCJxIiwiWSIsIldlYWtNYXAiLCJudCIsImNvbnN0cnVjdG9yIiwidCIsImUiLCJzIiwiXyRjc3NSZXN1bHQkIiwiRXJyb3IiLCJjc3NUZXh0Iiwic3R5bGVTaGVldCIsIm8iLCJsZW5ndGgiLCJnZXQiLCJyZXBsYWNlU3luYyIsInNldCIsInRvU3RyaW5nIiwidXQiLCJyIiwicHQiLCJyZWR1Y2UiLCJpIiwibiIsIiR0IiwiYWRvcHRlZFN0eWxlU2hlZXRzIiwibWFwIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwibGl0Tm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJ0ZXh0Q29udGVudCIsImFwcGVuZENoaWxkIiwiSiIsImNzc1J1bGVzIiwiaXMiLCJndCIsIl90IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZnQiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwibXQiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJBdCIsImdldFByb3RvdHlwZU9mIiwieXQiLCJtIiwiRiIsInRydXN0ZWRUeXBlcyIsIlN0IiwiZW1wdHlTY3JpcHQiLCJXIiwicmVhY3RpdmVFbGVtZW50UG9seWZpbGxTdXBwb3J0IiwidyIsIkgiLCJ0b0F0dHJpYnV0ZSIsIkJvb2xlYW4iLCJBcnJheSIsIkpTT04iLCJzdHJpbmdpZnkiLCJmcm9tQXR0cmlidXRlIiwiTnVtYmVyIiwicGFyc2UiLCJLIiwiUSIsImF0dHJpYnV0ZSIsInR5cGUiLCJTdHJpbmciLCJjb252ZXJ0ZXIiLCJyZWZsZWN0IiwiaGFzQ2hhbmdlZCIsIm1ldGFkYXRhIiwibGl0UHJvcGVydHlNZXRhZGF0YSIsInYiLCJIVE1MRWxlbWVudCIsImFkZEluaXRpYWxpemVyIiwiXyRFaSIsImwiLCJwdXNoIiwib2JzZXJ2ZWRBdHRyaWJ1dGVzIiwiZmluYWxpemUiLCJfJEVoIiwia2V5cyIsImNyZWF0ZVByb3BlcnR5Iiwic3RhdGUiLCJlbGVtZW50UHJvcGVydGllcyIsIm5vQWNjZXNzb3IiLCJnZXRQcm9wZXJ0eURlc2NyaXB0b3IiLCJjYWxsIiwiYSIsInJlcXVlc3RVcGRhdGUiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0UHJvcGVydHlPcHRpb25zIiwiaGFzT3duUHJvcGVydHkiLCJNYXAiLCJmaW5hbGl6ZWQiLCJwcm9wZXJ0aWVzIiwiXyRFdSIsImVsZW1lbnRTdHlsZXMiLCJmaW5hbGl6ZVN0eWxlcyIsInN0eWxlcyIsImlzQXJyYXkiLCJTZXQiLCJmbGF0IiwicmV2ZXJzZSIsInVuc2hpZnQiLCJ0b0xvd2VyQ2FzZSIsIl8kRXAiLCJpc1VwZGF0ZVBlbmRpbmciLCJoYXNVcGRhdGVkIiwiXyRFbSIsIl8kRXYiLCJfJEVnIiwiUHJvbWlzZSIsImVuYWJsZVVwZGF0aW5nIiwiXyRBTCIsIl8kRVMiLCJmb3JFYWNoIiwiYWRkQ29udHJvbGxlciIsIl8kRV8iLCJhZGQiLCJyZW5kZXJSb290IiwiaXNDb25uZWN0ZWQiLCJob3N0Q29ubmVjdGVkIiwicmVtb3ZlQ29udHJvbGxlciIsImRlbGV0ZSIsInNpemUiLCJjcmVhdGVSZW5kZXJSb290Iiwic2hhZG93Um9vdCIsImF0dGFjaFNoYWRvdyIsInNoYWRvd1Jvb3RPcHRpb25zIiwiY29ubmVjdGVkQ2FsbGJhY2siLCJkaXNjb25uZWN0ZWRDYWxsYmFjayIsImhvc3REaXNjb25uZWN0ZWQiLCJhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2siLCJfJEFLIiwiXyRFTyIsInJlbW92ZUF0dHJpYnV0ZSIsIkMiLCJfJEVQIiwiaGFzIiwiXyRFaiIsInJlamVjdCIsInNjaGVkdWxlVXBkYXRlIiwicGVyZm9ybVVwZGF0ZSIsIndyYXBwZWQiLCJzaG91bGRVcGRhdGUiLCJ3aWxsVXBkYXRlIiwiaG9zdFVwZGF0ZSIsInVwZGF0ZSIsIl8kRVQiLCJfJEFFIiwiaG9zdFVwZGF0ZWQiLCJmaXJzdFVwZGF0ZWQiLCJ1cGRhdGVkIiwidXBkYXRlQ29tcGxldGUiLCJnZXRVcGRhdGVDb21wbGV0ZSIsIm1vZGUiLCJSZWFjdGl2ZUVsZW1lbnQiLCJyZWFjdGl2ZUVsZW1lbnRWZXJzaW9ucyIsIlUiLCJHIiwiWiIsImNyZWF0ZVBvbGljeSIsImNyZWF0ZUhUTUwiLCJvdCIsImYiLCJNYXRoIiwicmFuZG9tIiwic2xpY2UiLCJodCIsInZ0IiwiUyIsIk8iLCJjcmVhdGVDb21tZW50IiwiTiIsImF0IiwiRXQiLCJpdGVyYXRvciIsIkQiLCJYIiwidHQiLCJBIiwiUmVnRXhwIiwiZXQiLCJzdCIsImN0IiwiYnQiLCJfJGxpdFR5cGUkIiwic3RyaW5ncyIsInZhbHVlcyIsIkN0IiwiRSIsImZvciIsIml0IiwieSIsImNyZWF0ZVRyZWVXYWxrZXIiLCJsdCIsInd0IiwiaCIsImQiLCJ1IiwiYyIsImciLCJsYXN0SW5kZXgiLCJleGVjIiwidGVzdCIsIl8iLCJzdGFydHNXaXRoIiwiUiIsInBhcnRzIiwiZWwiLCJjdXJyZW50Tm9kZSIsImNvbnRlbnQiLCJmaXJzdENoaWxkIiwicmVwbGFjZVdpdGgiLCJjaGlsZE5vZGVzIiwibmV4dE5vZGUiLCJub2RlVHlwZSIsImhhc0F0dHJpYnV0ZXMiLCJnZXRBdHRyaWJ1dGVOYW1lcyIsImVuZHNXaXRoIiwiZ2V0QXR0cmlidXRlIiwic3BsaXQiLCJJIiwiaW5kZXgiLCJuYW1lIiwiY3RvciIsIlB0IiwiVHQiLCJPdCIsImsiLCJ0YWdOYW1lIiwiYXBwZW5kIiwiZGF0YSIsImluZGV4T2YiLCJpbm5lckhUTUwiLCJiIiwiXyRDbyIsIl8kQ2wiLCJfJGxpdERpcmVjdGl2ZSQiLCJfJEFPIiwiXyRBVCIsIl8kQVMiLCJVdCIsIl8kQVYiLCJfJEFOIiwiXyRBRCIsIl8kQU0iLCJwYXJlbnROb2RlIiwiXyRBVSIsImNyZWF0aW9uU2NvcGUiLCJpbXBvcnROb2RlIiwiTSIsIm5leHRTaWJsaW5nIiwiTnQiLCJwIiwiXyRBSSIsIl8kQ3YiLCJfJEFIIiwiXyRBQSIsIl8kQUIiLCJvcHRpb25zIiwic3RhcnROb2RlIiwiZW5kTm9kZSIsIl8kQVIiLCIkIiwiVCIsImluc2VydEJlZm9yZSIsImNyZWF0ZVRleHROb2RlIiwiXyRBQyIsIl8kQVAiLCJyZW1vdmUiLCJzZXRDb25uZWN0ZWQiLCJlbGVtZW50IiwiZmlsbCIsImFyZ3VtZW50cyIsInRvZ2dsZUF0dHJpYnV0ZSIsImNhcHR1cmUiLCJvbmNlIiwicGFzc2l2ZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJhZGRFdmVudExpc3RlbmVyIiwiaGFuZGxlRXZlbnQiLCJob3N0IiwieiIsImxpdEh0bWxQb2x5ZmlsbFN1cHBvcnQiLCJsaXRIdG1sVmVyc2lvbnMiLCJSdCIsInJlbmRlckJlZm9yZSIsIl8kbGl0UGFydCQiLCJQIiwicmVuZGVyT3B0aW9ucyIsIl8kRG8iLCJyZW5kZXIiLCJydCIsIl8kbGl0RWxlbWVudCQiLCJsaXRFbGVtZW50SHlkcmF0ZVN1cHBvcnQiLCJMaXRFbGVtZW50IiwiQiIsImxpdEVsZW1lbnRQb2x5ZmlsbFN1cHBvcnQiLCJsaXRFbGVtZW50VmVyc2lvbnMiLCJNdCIsImN1c3RvbUVsZW1lbnRzIiwiZGVmaW5lIiwiSXQiLCJ4dCIsImtpbmQiLCJpbml0IiwiSHQiLCJHdCIsIkFUVFJJQlVURSIsIkNISUxEIiwiUFJPUEVSVFkiLCJCT09MRUFOX0FUVFJJQlVURSIsIkVWRU5UIiwiRUxFTUVOVCIsIkx0Iiwia3QiLCJfJEN0IiwiXyRDaSIsIkwiLCJkdCIsInp0IiwiV3QiLCJEdCIsIl8kQVEiLCJCdCIsInJlY29ubmVjdGVkIiwiZGlzY29ubmVjdGVkIiwic2V0VmFsdWUiLCJqdCIsIlZ0IiwiaiIsInF0IiwiS3QiLCJZdCIsIkp0IiwiR2lzY3VzV2lkZ2V0IiwiR0lTQ1VTX1NFU1NJT05fS0VZIiwiR0lTQ1VTX0RFRkFVTFRfSE9TVCIsIkVSUk9SX1NVR0dFU1RJT04iLCJfX3Nlc3Npb24iLCJfaWZyYW1lUmVmIiwibWVzc2FnZUV2ZW50SGFuZGxlciIsImhhbmRsZU1lc3NhZ2VFdmVudCIsImJpbmQiLCJoYXNMb2FkZWQiLCJzdHJpY3QiLCJyZWFjdGlvbnNFbmFibGVkIiwiZW1pdE1ldGFkYXRhIiwiaW5wdXRQb3NpdGlvbiIsInRoZW1lIiwibGFuZyIsImxvYWRpbmciLCJzZXR1cFNlc3Npb24iLCJ3aW5kb3ciLCJpZnJhbWVSZWYiLCJfaG9zdCIsIlVSTCIsIl9mb3JtYXRFcnJvciIsImxvY2F0aW9uIiwiaHJlZiIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJzZWFyY2hQYXJhbXMiLCJzZXRJdGVtIiwiaGFzaCIsImhpc3RvcnkiLCJyZXBsYWNlU3RhdGUiLCJ0aXRsZSIsInJlbW92ZUl0ZW0iLCJjb25zb2xlIiwid2FybiIsIm1lc3NhZ2UiLCJzaWduT3V0Iiwib3JpZ2luIiwiZ2lzY3VzIiwicmVzaXplSGVpZ2h0Iiwic3R5bGUiLCJoZWlnaHQiLCJpbmZvIiwiZXJyb3IiLCJpbmNsdWRlcyIsInNlbmRNZXNzYWdlIiwiY29udGVudFdpbmRvdyIsInBvc3RNZXNzYWdlIiwidXBkYXRlQ29uZmlnIiwic2V0Q29uZmlnIiwicmVwbyIsInJlcG9JZCIsImNhdGVnb3J5IiwiY2F0ZWdvcnlJZCIsInRlcm0iLCJnZXRUZXJtIiwibnVtYmVyIiwiZ2V0TnVtYmVyIiwiY2xhc3NMaXN0IiwiZ2V0TWV0YUNvbnRlbnQiLCJxdWVyeVNlbGVjdG9yIiwiX2dldENsZWFuZWRVcmwiLCJtYXBwaW5nIiwicGF0aG5hbWUiLCJzdWJzdHJpbmciLCJyZXBsYWNlIiwiZ2V0SWZyYW1lU3JjIiwiaWQiLCJzZXNzaW9uIiwiZGVzY3JpcHRpb24iLCJiYWNrTGluayIsIlVSTFNlYXJjaFBhcmFtcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@giscus+react@2.4.0_react-dom@18.2.0_react@18.2.0/node_modules/@giscus/react/dist/giscus-yDPVZW4a.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@giscus+react@2.4.0_react-dom@18.2.0_react@18.2.0/node_modules/@giscus/react/dist/index.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@giscus+react@2.4.0_react-dom@18.2.0_react@18.2.0/node_modules/@giscus/react/dist/index.js ***!
  \***********************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst j = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/.pnpm/next@14.1.0_@babel+core@7.23.9_@opentelemetry+api@1.4.1_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\"), t = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.1.0_@babel+core@7.23.9_@opentelemetry+api@1.4.1_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nfunction b({ id: r, host: s, repo: i, repoId: u, category: n, categoryId: o, mapping: c, term: a, strict: d, reactionsEnabled: f, emitMetadata: l, inputPosition: m, theme: p, lang: g, loading: q }) {\n    const [e, x] = t.useState(!1);\n    return t.useEffect(()=>{\n        e || (Promise.resolve().then(()=>__webpack_require__(/*! ./giscus-yDPVZW4a.js */ \"(ssr)/./node_modules/.pnpm/@giscus+react@2.4.0_react-dom@18.2.0_react@18.2.0/node_modules/@giscus/react/dist/giscus-yDPVZW4a.js\")), x(!0));\n    }, []), e ? j.jsx(\"giscus-widget\", {\n        id: r,\n        host: s,\n        repo: i,\n        repoid: u,\n        category: n,\n        categoryid: o,\n        mapping: c,\n        term: a,\n        strict: d,\n        reactionsenabled: f,\n        emitmetadata: l,\n        inputposition: m,\n        theme: p,\n        lang: g,\n        loading: q\n    }) : null;\n}\nmodule.exports = b;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGdpc2N1cytyZWFjdEAyLjQuMF9yZWFjdC1kb21AMTguMi4wX3JlYWN0QDE4LjIuMC9ub2RlX21vZHVsZXMvQGdpc2N1cy9yZWFjdC9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQUEsTUFBTUEsSUFBRUMsbUJBQU9BLENBQUMseU9BQW1CLEdBQUVDLElBQUVELG1CQUFPQSxDQUFDLGlOQUFPO0FBQUUsU0FBU0UsRUFBRSxFQUFDQyxJQUFHQyxDQUFDLEVBQUNDLE1BQUtDLENBQUMsRUFBQ0MsTUFBS0MsQ0FBQyxFQUFDQyxRQUFPQyxDQUFDLEVBQUNDLFVBQVNDLENBQUMsRUFBQ0MsWUFBV0MsQ0FBQyxFQUFDQyxTQUFRQyxDQUFDLEVBQUNDLE1BQUtDLENBQUMsRUFBQ0MsUUFBT0MsQ0FBQyxFQUFDQyxrQkFBaUJDLENBQUMsRUFBQ0MsY0FBYUMsQ0FBQyxFQUFDQyxlQUFjQyxDQUFDLEVBQUNDLE9BQU1DLENBQUMsRUFBQ0MsTUFBS0MsQ0FBQyxFQUFDQyxTQUFRQyxDQUFDLEVBQUM7SUFBRSxNQUFLLENBQUNDLEdBQUVDLEVBQUUsR0FBQ2pDLEVBQUVrQyxRQUFRLENBQUMsQ0FBQztJQUFHLE9BQU9sQyxFQUFFbUMsU0FBUyxDQUFDO1FBQUtILEtBQUlJLENBQUFBLFFBQVFDLE9BQU8sR0FBR0MsSUFBSSxDQUFDLElBQUl2QyxtQkFBT0EsQ0FBQyw2SkFBc0IsSUFBR2tDLEVBQUUsQ0FBQyxFQUFDO0lBQUUsR0FBRSxFQUFFLEdBQUVELElBQUVsQyxFQUFFeUMsR0FBRyxDQUFDLGlCQUFnQjtRQUFDckMsSUFBR0M7UUFBRUMsTUFBS0M7UUFBRUMsTUFBS0M7UUFBRWlDLFFBQU8vQjtRQUFFQyxVQUFTQztRQUFFOEIsWUFBVzVCO1FBQUVDLFNBQVFDO1FBQUVDLE1BQUtDO1FBQUVDLFFBQU9DO1FBQUV1QixrQkFBaUJyQjtRQUFFc0IsY0FBYXBCO1FBQUVxQixlQUFjbkI7UUFBRUMsT0FBTUM7UUFBRUMsTUFBS0M7UUFBRUMsU0FBUUM7SUFBQyxLQUFHO0FBQUk7QUFBQ2MsT0FBT0MsT0FBTyxHQUFDN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZC1uZXh0anMtc3RhcnRlci1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BnaXNjdXMrcmVhY3RAMi40LjBfcmVhY3QtZG9tQDE4LjIuMF9yZWFjdEAxOC4yLjAvbm9kZV9tb2R1bGVzL0BnaXNjdXMvcmVhY3QvZGlzdC9pbmRleC5qcz85YzY2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO2NvbnN0IGo9cmVxdWlyZShcInJlYWN0L2pzeC1ydW50aW1lXCIpLHQ9cmVxdWlyZShcInJlYWN0XCIpO2Z1bmN0aW9uIGIoe2lkOnIsaG9zdDpzLHJlcG86aSxyZXBvSWQ6dSxjYXRlZ29yeTpuLGNhdGVnb3J5SWQ6byxtYXBwaW5nOmMsdGVybTphLHN0cmljdDpkLHJlYWN0aW9uc0VuYWJsZWQ6ZixlbWl0TWV0YWRhdGE6bCxpbnB1dFBvc2l0aW9uOm0sdGhlbWU6cCxsYW5nOmcsbG9hZGluZzpxfSl7Y29uc3RbZSx4XT10LnVzZVN0YXRlKCExKTtyZXR1cm4gdC51c2VFZmZlY3QoKCk9PntlfHwoUHJvbWlzZS5yZXNvbHZlKCkudGhlbigoKT0+cmVxdWlyZShcIi4vZ2lzY3VzLXlEUFZaVzRhLmpzXCIpKSx4KCEwKSl9LFtdKSxlP2ouanN4KFwiZ2lzY3VzLXdpZGdldFwiLHtpZDpyLGhvc3Q6cyxyZXBvOmkscmVwb2lkOnUsY2F0ZWdvcnk6bixjYXRlZ29yeWlkOm8sbWFwcGluZzpjLHRlcm06YSxzdHJpY3Q6ZCxyZWFjdGlvbnNlbmFibGVkOmYsZW1pdG1ldGFkYXRhOmwsaW5wdXRwb3NpdGlvbjptLHRoZW1lOnAsbGFuZzpnLGxvYWRpbmc6cX0pOm51bGx9bW9kdWxlLmV4cG9ydHM9YjtcbiJdLCJuYW1lcyI6WyJqIiwicmVxdWlyZSIsInQiLCJiIiwiaWQiLCJyIiwiaG9zdCIsInMiLCJyZXBvIiwiaSIsInJlcG9JZCIsInUiLCJjYXRlZ29yeSIsIm4iLCJjYXRlZ29yeUlkIiwibyIsIm1hcHBpbmciLCJjIiwidGVybSIsImEiLCJzdHJpY3QiLCJkIiwicmVhY3Rpb25zRW5hYmxlZCIsImYiLCJlbWl0TWV0YWRhdGEiLCJsIiwiaW5wdXRQb3NpdGlvbiIsIm0iLCJ0aGVtZSIsInAiLCJsYW5nIiwiZyIsImxvYWRpbmciLCJxIiwiZSIsIngiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIlByb21pc2UiLCJyZXNvbHZlIiwidGhlbiIsImpzeCIsInJlcG9pZCIsImNhdGVnb3J5aWQiLCJyZWFjdGlvbnNlbmFibGVkIiwiZW1pdG1ldGFkYXRhIiwiaW5wdXRwb3NpdGlvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@giscus+react@2.4.0_react-dom@18.2.0_react@18.2.0/node_modules/@giscus/react/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@giscus+react@2.4.0_react-dom@18.2.0_react@18.2.0/node_modules/@giscus/react/dist/wrapper.mjs":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@giscus+react@2.4.0_react-dom@18.2.0_react@18.2.0/node_modules/@giscus/react/dist/wrapper.mjs ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/.pnpm/@giscus+react@2.4.0_react-dom@18.2.0_react@18.2.0/node_modules/@giscus/react/dist/index.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_index_js__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((_index_js__WEBPACK_IMPORTED_MODULE_0___default()));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGdpc2N1cytyZWFjdEAyLjQuMF9yZWFjdC1kb21AMTguMi4wX3JlYWN0QDE4LjIuMC9ub2RlX21vZHVsZXMvQGdpc2N1cy9yZWFjdC9kaXN0L3dyYXBwZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnQztBQUVoQyxpRUFBZUEsa0RBQU1BLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90YWlsd2luZC1uZXh0anMtc3RhcnRlci1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BnaXNjdXMrcmVhY3RAMi40LjBfcmVhY3QtZG9tQDE4LjIuMF9yZWFjdEAxOC4yLjAvbm9kZV9tb2R1bGVzL0BnaXNjdXMvcmVhY3QvZGlzdC93cmFwcGVyLm1qcz83YjgwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2R1bGUgZnJvbSAnLi9pbmRleC5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IG1vZHVsZTsiXSwibmFtZXMiOlsibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@giscus+react@2.4.0_react-dom@18.2.0_react@18.2.0/node_modules/@giscus/react/dist/wrapper.mjs\n");

/***/ })

};
;